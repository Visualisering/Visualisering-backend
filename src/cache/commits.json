[
    {
        "repo": "webbramverk",
        "owner": "sk222sw",
        "timestamp": "2016-02-25T15:28:01Z",
        "message": "sign in and out",
        "committer": "sk222sw",
        "filename": "test/controllers/sessions_controller_test.rb",
        "code": "QEAgLTAsMCArMSwzIEBACisjIFBsYWNlIGFsbCB0aGUgYmVoYXZpb3JzIGFuZCBob29rcyByZWxhdGVkIHRvIHRoZSBtYXRjaGluZyBjb250cm9sbGVyIGhlcmUuCisjIEFsbCB0aGlzIGxvZ2ljIHdpbGwgYXV0b21hdGljYWxseSBiZSBhdmFpbGFibGUgaW4gYXBwbGljYXRpb24uanMuCisjIFlvdSBjYW4gdXNlIENvZmZlZVNjcmlwdCBpbiB0aGlzIGZpbGU6IGh0dHA6Ly9jb2ZmZWVzY3JpcHQub3JnL3VuZGVmaW5lZEBAIC0wLDAgKzEsMyBAQAorLy8gUGxhY2UgYWxsIHRoZSBzdHlsZXMgcmVsYXRlZCB0byB0aGUgU2Vzc2lvbnMgY29udHJvbGxlciBoZXJlLgorLy8gVGhleSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgaW5jbHVkZWQgaW4gYXBwbGljYXRpb24uY3NzLgorLy8gWW91IGNhbiB1c2UgU2FzcyAoU0NTUykgaGVyZTogaHR0cDovL3Nhc3MtbGFuZy5jb20vQEAgLTIsOSArMiw1IEBAIGNsYXNzIEFwcGxpY2F0aW9uQ29udHJvbGxlciA8IEFjdGlvbkNvbnRyb2xsZXI6OkJhc2UKICAgIyBQcmV2ZW50IENTUkYgYXR0YWNrcyBieSByYWlzaW5nIGFuIGV4Y2VwdGlvbi4KICAgIyBGb3IgQVBJcywgeW91IG1heSB3YW50IHRvIHVzZSA6bnVsbF9zZXNzaW9uIGluc3RlYWQuCiAgIHByb3RlY3RfZnJvbV9mb3JnZXJ5IHdpdGg6IDpleGNlcHRpb24KLQotICBkZWYgaGVsbG8KLSAgICByZW5kZXIgdGV4dDogImhlbGxvIHdvcmxkIgotICBlbmQKLQorICBpbmNsdWRlIFNlc3Npb25zSGVscGVyCiBlbmRAQCAtMSw0ICsxLDggQEAKIGNsYXNzIFBhZ2VzQ29udHJvbGxlciA8IEFwcGxpY2F0aW9uQ29udHJvbGxlcgogICBkZWYgc2lnbnVwCiAgIGVuZAorICAKKyAgZGVmIGhvbWUKKyAgICBAdGl0bGUgPSAiSG9tZSIKKyAgZW5kCiBlbmRAQCAtMCwwICsxLDIzIEBACitjbGFzcyBTZXNzaW9uc0NvbnRyb2xsZXIgPCBBcHBsaWNhdGlvbkNvbnRyb2xsZXIKKyAgZGVmIG5ldworICAgIEB0aXRsZSA9ICJTaWduIGluIgorICBlbmQKKyAgCisgIGRlZiBjcmVhdGUKKworICAgIHVzZXIgPSBVc2VyLmZpbmRfYnkoZW1haWw6IHBhcmFtc1s6c2Vzc2lvbl1bOmVtYWlsXS5kb3duY2FzZSkKKyAgICBpZiB1c2VyICYmIHVzZXIuYXV0aGVudGljYXRlKHBhcmFtc1s6c2Vzc2lvbl1bOnBhc3N3b3JkXSkKKyAgICAgIGxvZ19pbiB1c2VyCisgICAgICByZWRpcmVjdF90byB1c2VyCisgICAgZWxzZQorICAgICAgIyBmbGFzaC5ub3cgYmVjYXVzZSB0aGUgInJlbmRlciAnbmV3JyIgZG9lcyBub3QgY291bnQgYXMgYSBHRVQtcmVxCisgICAgICBmbGFzaC5ub3dbOmRhbmdlcl0gPSAiTG9nIGluIGZhaWxlZCwgbWFrZSBzdXJlIHlvdSBzcGVsbGVkIGV2ZXJ5dGhpbmcgY29ycmVjdGx5LiIKKyAgICAgIHJlbmRlciAnbmV3JworICAgIGVuZAorICBlbmQKKyAgCisgIGRlZiBkZXN0cm95CisgICAgbG9nX291dAorICAgIHJlZGlyZWN0X3RvIHJvb3RfcGF0aAorICBlbmQKK2VuZEBAIC0xMSw2ICsxMSw3IEBAIGRlZiBuZXcKICAgZGVmIGNyZWF0ZQogICAgIEB1c2VyID0gVXNlci5uZXcodXNlcl9wYXJhbXMpCiAgICAgaWYgQHVzZXIuc2F2ZQorICAgICAgbG9nX2luIEB1c2VyCiAgICAgICBmbGFzaFs6c3VjY2Vzc10gPSAiTmV3IHVzZXIgY3JlYXRlZCIKICAgICAgIHJlZGlyZWN0X3RvIEB1c2VyCiAgICAgZWxzZUBAIC0wLDAgKzEsMTkgQEAKK21vZHVsZSBTZXNzaW9uc0hlbHBlcgorCisgIGRlZiBsb2dfaW4odXNlcikKKyAgICBzZXNzaW9uWzp1c2VyX2lkXSA9IHVzZXIuaWQKKyAgZW5kCisKKyAgZGVmIGN1cnJlbnRfdXNlcgorICAgIEBjdXJyZW50X3VzZXIgfHw9IFVzZXIuZmluZF9ieShpZDogc2Vzc2lvbls6dXNlcl9pZF0pCisgIGVuZAorICAKKyAgZGVmIGxvZ2dlZF9pbj8KKyAgICAhY3VycmVudF91c2VyLm5pbD8KKyAgZW5kCisgIAorICBkZWYgbG9nX291dAorICAgIHNlc3Npb24uZGVsZXRlKDp1c2VyX2lkKQorICAgIEBjdXJyZW50X3VzZXIgPSBuaWwKKyAgZW5kCitlbmRAQCAtMCwwICsxLDUgQEAKKyAgPGZvb3RlciBjbGFzcz0iZm9vdGVyIj4KKyAgICA8c21hbGw+CisgICAgICBDcmVhdGVkIGJ5IFNvbm55IEtqZWxsYmVyZworICAgIDwvc21hbGw+CisgIDwvZm9vdGVyPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMCwwICsxLDE2IEBACisgIDxoZWFkZXI+CisgICAgPGgxPmNvb2wgaGVhZGVyPC9oMT4KKyAgICA8JT0gbGlua190byAiV2ViYnJhbXZlcmsiLCByb290X3BhdGgsIGlkOiAibG9nbyIgJT4KKyAgICA8bmF2PgorICAgICAgPHVsIGNsYXNzPSJuYXZiYXIiPgorICAgICAgICA8bGk+PCU9IGxpbmtfdG8gIkhvbWUiLCAgIHJvb3RfcGF0aCAlPjwvbGk+CisgICAgICAgICAgPGxpPiA8JT0gbG9nZ2VkX2luPyAlPiA8L2xpPgorICAgICAgICA8JSBpZiBsb2dnZWRfaW4/ICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJBUEkta2V5cyIsIGN1cnJlbnRfdXNlciAlPjwvbGk+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgb3V0IiwgbG9nb3V0X3BhdGgsIG1ldGhvZDogImRlbGV0ZSIgJT48L2xpPgorICAgICAgICA8JSBlbHNlICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgaW4iLCBsb2dpbl9wYXRoICU+PC9saT4KKyAgICAgICAgPCUgZW5kICU+CisgICAgICA8L3VsPiAgICAgIAorICAgIDwvbmF2PgorICA8L2hlYWRlcj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTAsMCArMSw0IEBACis8IS0tW2lmIGx0IElFIDldPgorICA8c2NyaXB0IHNyYz0iLy9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvaHRtbDVzaGl2L3IyOS9odG1sNS5taW4uanMiPgorICA8L3NjcmlwdD4KKzwhW2VuZGlmXS0tPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwxNyArMSwyMCBAQAogPCFET0NUWVBFIGh0bWw+CiA8aHRtbD4KIDxoZWFkPgotICA8dGl0bGU+V29ya3NwYWNlPC90aXRsZT4KKyAgICA8dGl0bGU+PCU9IHlpZWxkKDp0aXRsZSkgJT48L3RpdGxlPgogICA8JT0gc3R5bGVzaGVldF9saW5rX3RhZyAgICAnYXBwbGljYXRpb24nLCBtZWRpYTogJ2FsbCcsICdkYXRhLXR1cmJvbGlua3MtdHJhY2snID0+IHRydWUgJT4KICAgPCU9IGphdmFzY3JpcHRfaW5jbHVkZV90YWcgJ2FwcGxpY2F0aW9uJywgJ2RhdGEtdHVyYm9saW5rcy10cmFjaycgPT4gdHJ1ZSAlPgogICA8JT0gY3NyZl9tZXRhX3RhZ3MgJT4KKyAgPCU9IHJlbmRlciAnbGF5b3V0cy9zaGltJyAlPgogPC9oZWFkPgogPGJvZHk+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvaGVhZGVyJyAlPgogICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPjwvZGl2PgogICA8JT0geWllbGQgJT4KICAgICA8JSBmbGFzaC5lYWNoIGRvIHxtZXNzYWdlX3R5cGUsIG1lc3NhZ2V8ICU+Ci0gICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtPCU9IG1lc3NhZ2VfdHlwZSAlPiI+PCU9IG1lc3NhZ2UgJT48L2Rpdj4KKyAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LTwlPSBtZXNzYWdlX3R5cGUgJT4iPjwlPSBtZXNzYWdlICU+PC9kaXY+CiAgICAgPCUgZW5kICU+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvZm9vdGVyJyAlPgogICA8JT0gZGVidWcocGFyYW1zKSBpZiBSYWlscy5lbnYuZGV2ZWxvcG1lbnQ/ICU+CiA8L2JvZHk+CiA8L2h0bWw+QEAgLTAsMCArMSw1IEBACis8JSBwcm92aWRlKDp0aXRsZSwgIkhvbWUiKSAlPgorPGgyPldlbGNvbWU8L2gyPgorPHA+CisgICAgRG8gY29vbCBzdHVmZiwgcGxlYXNlLgorPC9wPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwyICswLDAgQEAKLTxoMT5QYWdlcyNzaWdudXA8L2gxPgotPHA+RmluZCBtZSBpbiBhcHAvdmlld3MvcGFnZXMvc2lnbnVwLmh0bWwuZXJiPC9wPkBAIC0wLDAgKzEsMTQgQEAKKzxkaXYgY2xhc3M9ImZvcm0gbG9naW4iPgorICA8JT0gZm9ybV9mb3IoOnNlc3Npb24sIHVybDogbG9naW5fcGF0aCkgZG8gfGZ8ICU+CisKKyAgICA8JT0gZi5sYWJlbCA6ZW1haWwgJT4KKyAgICA8JT0gZi5lbWFpbF9maWVsZCA6ZW1haWwgJT4KKworICAgIDwlPSBmLmxhYmVsIDpwYXNzd29yZCAlPgorICAgIDwlPSBmLnBhc3N3b3JkX2ZpZWxkIDpwYXNzd29yZCAlPgorCisgICAgPCU9IGYuc3VibWl0ICJMb2cgaW4iICU+CisgIDwlIGVuZCAlPgorCisgIDxwPm9yIDwlPSBsaW5rX3RvICJTaWduIHVwIiwgc2lnbnVwX3BhdGggJT48L3A+Cis8L2Rpdj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTEsOSArMSwxNCBAQAogUmFpbHMuYXBwbGljYXRpb24ucm91dGVzLmRyYXcgZG8KICAgCi0gIHJvb3QgJ2FwcGxpY2F0aW9uI2hlbGxvJwotICBnZXQgJ3BhZ2VzL3NpZ251cCcKLSAgZ2V0ICd1c2Vycy9uZXcnCi0gIGdldCAnc2lnbnVwJyA9PiAndXNlcnMjbmV3JworICByb290ICAgICAgICAgICAgICAgICAgICAncGFnZXMjaG9tZScKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3BhZ2VzL3NpZ251cCcKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3VzZXJzL25ldycKKyAgZ2V0ICAgICAgICdzaWdudXAnICA9PiAgJ3VzZXJzI25ldycKKyAgZ2V0ICAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI25ldycKKyAgcG9zdCAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI2NyZWF0ZScKKyAgZGVsZXRlICAgICdsb2dvdXQnICA9PiAgJ3Nlc3Npb25zI2Rlc3Ryb3knCisgIAorICAKICAgcmVzb3VyY2VzIDp1c2VycwogICAKICAgQEAgLTAsMCArMSw5IEBACityZXF1aXJlICd0ZXN0X2hlbHBlcicKKworY2xhc3MgU2Vzc2lvbnNDb250cm9sbGVyVGVzdCA8IEFjdGlvbkNvbnRyb2xsZXI6OlRlc3RDYXNlCisgIHRlc3QgInNob3VsZCBnZXQgbmV3IiBkbworICAgIGdldCA6bmV3CisgICAgYXNzZXJ0X3Jlc3BvbnNlIDpzdWNjZXNzCisgIGVuZAorCitlbmQ="
    },
    {
        "repo": "webbramverk",
        "owner": "sk222sw",
        "timestamp": "2016-02-25T11:03:07Z",
        "message": "added puma and procfile to satisfy Heroku",
        "committer": "sk222sw",
        "filename": "test/controllers/sessions_controller_test.rb",
        "code": "QEAgLTAsMCArMSwzIEBACisjIFBsYWNlIGFsbCB0aGUgYmVoYXZpb3JzIGFuZCBob29rcyByZWxhdGVkIHRvIHRoZSBtYXRjaGluZyBjb250cm9sbGVyIGhlcmUuCisjIEFsbCB0aGlzIGxvZ2ljIHdpbGwgYXV0b21hdGljYWxseSBiZSBhdmFpbGFibGUgaW4gYXBwbGljYXRpb24uanMuCisjIFlvdSBjYW4gdXNlIENvZmZlZVNjcmlwdCBpbiB0aGlzIGZpbGU6IGh0dHA6Ly9jb2ZmZWVzY3JpcHQub3JnL3VuZGVmaW5lZEBAIC0wLDAgKzEsMyBAQAorLy8gUGxhY2UgYWxsIHRoZSBzdHlsZXMgcmVsYXRlZCB0byB0aGUgU2Vzc2lvbnMgY29udHJvbGxlciBoZXJlLgorLy8gVGhleSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgaW5jbHVkZWQgaW4gYXBwbGljYXRpb24uY3NzLgorLy8gWW91IGNhbiB1c2UgU2FzcyAoU0NTUykgaGVyZTogaHR0cDovL3Nhc3MtbGFuZy5jb20vQEAgLTIsOSArMiw1IEBAIGNsYXNzIEFwcGxpY2F0aW9uQ29udHJvbGxlciA8IEFjdGlvbkNvbnRyb2xsZXI6OkJhc2UKICAgIyBQcmV2ZW50IENTUkYgYXR0YWNrcyBieSByYWlzaW5nIGFuIGV4Y2VwdGlvbi4KICAgIyBGb3IgQVBJcywgeW91IG1heSB3YW50IHRvIHVzZSA6bnVsbF9zZXNzaW9uIGluc3RlYWQuCiAgIHByb3RlY3RfZnJvbV9mb3JnZXJ5IHdpdGg6IDpleGNlcHRpb24KLQotICBkZWYgaGVsbG8KLSAgICByZW5kZXIgdGV4dDogImhlbGxvIHdvcmxkIgotICBlbmQKLQorICBpbmNsdWRlIFNlc3Npb25zSGVscGVyCiBlbmRAQCAtMSw0ICsxLDggQEAKIGNsYXNzIFBhZ2VzQ29udHJvbGxlciA8IEFwcGxpY2F0aW9uQ29udHJvbGxlcgogICBkZWYgc2lnbnVwCiAgIGVuZAorICAKKyAgZGVmIGhvbWUKKyAgICBAdGl0bGUgPSAiSG9tZSIKKyAgZW5kCiBlbmRAQCAtMCwwICsxLDIzIEBACitjbGFzcyBTZXNzaW9uc0NvbnRyb2xsZXIgPCBBcHBsaWNhdGlvbkNvbnRyb2xsZXIKKyAgZGVmIG5ldworICAgIEB0aXRsZSA9ICJTaWduIGluIgorICBlbmQKKyAgCisgIGRlZiBjcmVhdGUKKworICAgIHVzZXIgPSBVc2VyLmZpbmRfYnkoZW1haWw6IHBhcmFtc1s6c2Vzc2lvbl1bOmVtYWlsXS5kb3duY2FzZSkKKyAgICBpZiB1c2VyICYmIHVzZXIuYXV0aGVudGljYXRlKHBhcmFtc1s6c2Vzc2lvbl1bOnBhc3N3b3JkXSkKKyAgICAgIGxvZ19pbiB1c2VyCisgICAgICByZWRpcmVjdF90byB1c2VyCisgICAgZWxzZQorICAgICAgIyBmbGFzaC5ub3cgYmVjYXVzZSB0aGUgInJlbmRlciAnbmV3JyIgZG9lcyBub3QgY291bnQgYXMgYSBHRVQtcmVxCisgICAgICBmbGFzaC5ub3dbOmRhbmdlcl0gPSAiTG9nIGluIGZhaWxlZCwgbWFrZSBzdXJlIHlvdSBzcGVsbGVkIGV2ZXJ5dGhpbmcgY29ycmVjdGx5LiIKKyAgICAgIHJlbmRlciAnbmV3JworICAgIGVuZAorICBlbmQKKyAgCisgIGRlZiBkZXN0cm95CisgICAgbG9nX291dAorICAgIHJlZGlyZWN0X3RvIHJvb3RfcGF0aAorICBlbmQKK2VuZEBAIC0xMSw2ICsxMSw3IEBAIGRlZiBuZXcKICAgZGVmIGNyZWF0ZQogICAgIEB1c2VyID0gVXNlci5uZXcodXNlcl9wYXJhbXMpCiAgICAgaWYgQHVzZXIuc2F2ZQorICAgICAgbG9nX2luIEB1c2VyCiAgICAgICBmbGFzaFs6c3VjY2Vzc10gPSAiTmV3IHVzZXIgY3JlYXRlZCIKICAgICAgIHJlZGlyZWN0X3RvIEB1c2VyCiAgICAgZWxzZUBAIC0wLDAgKzEsMTkgQEAKK21vZHVsZSBTZXNzaW9uc0hlbHBlcgorCisgIGRlZiBsb2dfaW4odXNlcikKKyAgICBzZXNzaW9uWzp1c2VyX2lkXSA9IHVzZXIuaWQKKyAgZW5kCisKKyAgZGVmIGN1cnJlbnRfdXNlcgorICAgIEBjdXJyZW50X3VzZXIgfHw9IFVzZXIuZmluZF9ieShpZDogc2Vzc2lvbls6dXNlcl9pZF0pCisgIGVuZAorICAKKyAgZGVmIGxvZ2dlZF9pbj8KKyAgICAhY3VycmVudF91c2VyLm5pbD8KKyAgZW5kCisgIAorICBkZWYgbG9nX291dAorICAgIHNlc3Npb24uZGVsZXRlKDp1c2VyX2lkKQorICAgIEBjdXJyZW50X3VzZXIgPSBuaWwKKyAgZW5kCitlbmRAQCAtMCwwICsxLDUgQEAKKyAgPGZvb3RlciBjbGFzcz0iZm9vdGVyIj4KKyAgICA8c21hbGw+CisgICAgICBDcmVhdGVkIGJ5IFNvbm55IEtqZWxsYmVyZworICAgIDwvc21hbGw+CisgIDwvZm9vdGVyPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMCwwICsxLDE2IEBACisgIDxoZWFkZXI+CisgICAgPGgxPmNvb2wgaGVhZGVyPC9oMT4KKyAgICA8JT0gbGlua190byAiV2ViYnJhbXZlcmsiLCByb290X3BhdGgsIGlkOiAibG9nbyIgJT4KKyAgICA8bmF2PgorICAgICAgPHVsIGNsYXNzPSJuYXZiYXIiPgorICAgICAgICA8bGk+PCU9IGxpbmtfdG8gIkhvbWUiLCAgIHJvb3RfcGF0aCAlPjwvbGk+CisgICAgICAgICAgPGxpPiA8JT0gbG9nZ2VkX2luPyAlPiA8L2xpPgorICAgICAgICA8JSBpZiBsb2dnZWRfaW4/ICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJBUEkta2V5cyIsIGN1cnJlbnRfdXNlciAlPjwvbGk+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgb3V0IiwgbG9nb3V0X3BhdGgsIG1ldGhvZDogImRlbGV0ZSIgJT48L2xpPgorICAgICAgICA8JSBlbHNlICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgaW4iLCBsb2dpbl9wYXRoICU+PC9saT4KKyAgICAgICAgPCUgZW5kICU+CisgICAgICA8L3VsPiAgICAgIAorICAgIDwvbmF2PgorICA8L2hlYWRlcj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTAsMCArMSw0IEBACis8IS0tW2lmIGx0IElFIDldPgorICA8c2NyaXB0IHNyYz0iLy9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvaHRtbDVzaGl2L3IyOS9odG1sNS5taW4uanMiPgorICA8L3NjcmlwdD4KKzwhW2VuZGlmXS0tPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwxNyArMSwyMCBAQAogPCFET0NUWVBFIGh0bWw+CiA8aHRtbD4KIDxoZWFkPgotICA8dGl0bGU+V29ya3NwYWNlPC90aXRsZT4KKyAgICA8dGl0bGU+PCU9IHlpZWxkKDp0aXRsZSkgJT48L3RpdGxlPgogICA8JT0gc3R5bGVzaGVldF9saW5rX3RhZyAgICAnYXBwbGljYXRpb24nLCBtZWRpYTogJ2FsbCcsICdkYXRhLXR1cmJvbGlua3MtdHJhY2snID0+IHRydWUgJT4KICAgPCU9IGphdmFzY3JpcHRfaW5jbHVkZV90YWcgJ2FwcGxpY2F0aW9uJywgJ2RhdGEtdHVyYm9saW5rcy10cmFjaycgPT4gdHJ1ZSAlPgogICA8JT0gY3NyZl9tZXRhX3RhZ3MgJT4KKyAgPCU9IHJlbmRlciAnbGF5b3V0cy9zaGltJyAlPgogPC9oZWFkPgogPGJvZHk+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvaGVhZGVyJyAlPgogICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPjwvZGl2PgogICA8JT0geWllbGQgJT4KICAgICA8JSBmbGFzaC5lYWNoIGRvIHxtZXNzYWdlX3R5cGUsIG1lc3NhZ2V8ICU+Ci0gICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtPCU9IG1lc3NhZ2VfdHlwZSAlPiI+PCU9IG1lc3NhZ2UgJT48L2Rpdj4KKyAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LTwlPSBtZXNzYWdlX3R5cGUgJT4iPjwlPSBtZXNzYWdlICU+PC9kaXY+CiAgICAgPCUgZW5kICU+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvZm9vdGVyJyAlPgogICA8JT0gZGVidWcocGFyYW1zKSBpZiBSYWlscy5lbnYuZGV2ZWxvcG1lbnQ/ICU+CiA8L2JvZHk+CiA8L2h0bWw+QEAgLTAsMCArMSw1IEBACis8JSBwcm92aWRlKDp0aXRsZSwgIkhvbWUiKSAlPgorPGgyPldlbGNvbWU8L2gyPgorPHA+CisgICAgRG8gY29vbCBzdHVmZiwgcGxlYXNlLgorPC9wPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwyICswLDAgQEAKLTxoMT5QYWdlcyNzaWdudXA8L2gxPgotPHA+RmluZCBtZSBpbiBhcHAvdmlld3MvcGFnZXMvc2lnbnVwLmh0bWwuZXJiPC9wPkBAIC0wLDAgKzEsMTQgQEAKKzxkaXYgY2xhc3M9ImZvcm0gbG9naW4iPgorICA8JT0gZm9ybV9mb3IoOnNlc3Npb24sIHVybDogbG9naW5fcGF0aCkgZG8gfGZ8ICU+CisKKyAgICA8JT0gZi5sYWJlbCA6ZW1haWwgJT4KKyAgICA8JT0gZi5lbWFpbF9maWVsZCA6ZW1haWwgJT4KKworICAgIDwlPSBmLmxhYmVsIDpwYXNzd29yZCAlPgorICAgIDwlPSBmLnBhc3N3b3JkX2ZpZWxkIDpwYXNzd29yZCAlPgorCisgICAgPCU9IGYuc3VibWl0ICJMb2cgaW4iICU+CisgIDwlIGVuZCAlPgorCisgIDxwPm9yIDwlPSBsaW5rX3RvICJTaWduIHVwIiwgc2lnbnVwX3BhdGggJT48L3A+Cis8L2Rpdj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTEsOSArMSwxNCBAQAogUmFpbHMuYXBwbGljYXRpb24ucm91dGVzLmRyYXcgZG8KICAgCi0gIHJvb3QgJ2FwcGxpY2F0aW9uI2hlbGxvJwotICBnZXQgJ3BhZ2VzL3NpZ251cCcKLSAgZ2V0ICd1c2Vycy9uZXcnCi0gIGdldCAnc2lnbnVwJyA9PiAndXNlcnMjbmV3JworICByb290ICAgICAgICAgICAgICAgICAgICAncGFnZXMjaG9tZScKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3BhZ2VzL3NpZ251cCcKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3VzZXJzL25ldycKKyAgZ2V0ICAgICAgICdzaWdudXAnICA9PiAgJ3VzZXJzI25ldycKKyAgZ2V0ICAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI25ldycKKyAgcG9zdCAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI2NyZWF0ZScKKyAgZGVsZXRlICAgICdsb2dvdXQnICA9PiAgJ3Nlc3Npb25zI2Rlc3Ryb3knCisgIAorICAKICAgcmVzb3VyY2VzIDp1c2VycwogICAKICAgQEAgLTAsMCArMSw5IEBACityZXF1aXJlICd0ZXN0X2hlbHBlcicKKworY2xhc3MgU2Vzc2lvbnNDb250cm9sbGVyVGVzdCA8IEFjdGlvbkNvbnRyb2xsZXI6OlRlc3RDYXNlCisgIHRlc3QgInNob3VsZCBnZXQgbmV3IiBkbworICAgIGdldCA6bmV3CisgICAgYXNzZXJ0X3Jlc3BvbnNlIDpzdWNjZXNzCisgIGVuZAorCitlbmQ="
    },
    {
        "repo": "webbramverk",
        "owner": "sk222sw",
        "timestamp": "2016-02-25T10:58:13Z",
        "message": "signup working",
        "committer": "sk222sw",
        "filename": "test/controllers/sessions_controller_test.rb",
        "code": "QEAgLTAsMCArMSwzIEBACisjIFBsYWNlIGFsbCB0aGUgYmVoYXZpb3JzIGFuZCBob29rcyByZWxhdGVkIHRvIHRoZSBtYXRjaGluZyBjb250cm9sbGVyIGhlcmUuCisjIEFsbCB0aGlzIGxvZ2ljIHdpbGwgYXV0b21hdGljYWxseSBiZSBhdmFpbGFibGUgaW4gYXBwbGljYXRpb24uanMuCisjIFlvdSBjYW4gdXNlIENvZmZlZVNjcmlwdCBpbiB0aGlzIGZpbGU6IGh0dHA6Ly9jb2ZmZWVzY3JpcHQub3JnL3VuZGVmaW5lZEBAIC0wLDAgKzEsMyBAQAorLy8gUGxhY2UgYWxsIHRoZSBzdHlsZXMgcmVsYXRlZCB0byB0aGUgU2Vzc2lvbnMgY29udHJvbGxlciBoZXJlLgorLy8gVGhleSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgaW5jbHVkZWQgaW4gYXBwbGljYXRpb24uY3NzLgorLy8gWW91IGNhbiB1c2UgU2FzcyAoU0NTUykgaGVyZTogaHR0cDovL3Nhc3MtbGFuZy5jb20vQEAgLTIsOSArMiw1IEBAIGNsYXNzIEFwcGxpY2F0aW9uQ29udHJvbGxlciA8IEFjdGlvbkNvbnRyb2xsZXI6OkJhc2UKICAgIyBQcmV2ZW50IENTUkYgYXR0YWNrcyBieSByYWlzaW5nIGFuIGV4Y2VwdGlvbi4KICAgIyBGb3IgQVBJcywgeW91IG1heSB3YW50IHRvIHVzZSA6bnVsbF9zZXNzaW9uIGluc3RlYWQuCiAgIHByb3RlY3RfZnJvbV9mb3JnZXJ5IHdpdGg6IDpleGNlcHRpb24KLQotICBkZWYgaGVsbG8KLSAgICByZW5kZXIgdGV4dDogImhlbGxvIHdvcmxkIgotICBlbmQKLQorICBpbmNsdWRlIFNlc3Npb25zSGVscGVyCiBlbmRAQCAtMSw0ICsxLDggQEAKIGNsYXNzIFBhZ2VzQ29udHJvbGxlciA8IEFwcGxpY2F0aW9uQ29udHJvbGxlcgogICBkZWYgc2lnbnVwCiAgIGVuZAorICAKKyAgZGVmIGhvbWUKKyAgICBAdGl0bGUgPSAiSG9tZSIKKyAgZW5kCiBlbmRAQCAtMCwwICsxLDIzIEBACitjbGFzcyBTZXNzaW9uc0NvbnRyb2xsZXIgPCBBcHBsaWNhdGlvbkNvbnRyb2xsZXIKKyAgZGVmIG5ldworICAgIEB0aXRsZSA9ICJTaWduIGluIgorICBlbmQKKyAgCisgIGRlZiBjcmVhdGUKKworICAgIHVzZXIgPSBVc2VyLmZpbmRfYnkoZW1haWw6IHBhcmFtc1s6c2Vzc2lvbl1bOmVtYWlsXS5kb3duY2FzZSkKKyAgICBpZiB1c2VyICYmIHVzZXIuYXV0aGVudGljYXRlKHBhcmFtc1s6c2Vzc2lvbl1bOnBhc3N3b3JkXSkKKyAgICAgIGxvZ19pbiB1c2VyCisgICAgICByZWRpcmVjdF90byB1c2VyCisgICAgZWxzZQorICAgICAgIyBmbGFzaC5ub3cgYmVjYXVzZSB0aGUgInJlbmRlciAnbmV3JyIgZG9lcyBub3QgY291bnQgYXMgYSBHRVQtcmVxCisgICAgICBmbGFzaC5ub3dbOmRhbmdlcl0gPSAiTG9nIGluIGZhaWxlZCwgbWFrZSBzdXJlIHlvdSBzcGVsbGVkIGV2ZXJ5dGhpbmcgY29ycmVjdGx5LiIKKyAgICAgIHJlbmRlciAnbmV3JworICAgIGVuZAorICBlbmQKKyAgCisgIGRlZiBkZXN0cm95CisgICAgbG9nX291dAorICAgIHJlZGlyZWN0X3RvIHJvb3RfcGF0aAorICBlbmQKK2VuZEBAIC0xMSw2ICsxMSw3IEBAIGRlZiBuZXcKICAgZGVmIGNyZWF0ZQogICAgIEB1c2VyID0gVXNlci5uZXcodXNlcl9wYXJhbXMpCiAgICAgaWYgQHVzZXIuc2F2ZQorICAgICAgbG9nX2luIEB1c2VyCiAgICAgICBmbGFzaFs6c3VjY2Vzc10gPSAiTmV3IHVzZXIgY3JlYXRlZCIKICAgICAgIHJlZGlyZWN0X3RvIEB1c2VyCiAgICAgZWxzZUBAIC0wLDAgKzEsMTkgQEAKK21vZHVsZSBTZXNzaW9uc0hlbHBlcgorCisgIGRlZiBsb2dfaW4odXNlcikKKyAgICBzZXNzaW9uWzp1c2VyX2lkXSA9IHVzZXIuaWQKKyAgZW5kCisKKyAgZGVmIGN1cnJlbnRfdXNlcgorICAgIEBjdXJyZW50X3VzZXIgfHw9IFVzZXIuZmluZF9ieShpZDogc2Vzc2lvbls6dXNlcl9pZF0pCisgIGVuZAorICAKKyAgZGVmIGxvZ2dlZF9pbj8KKyAgICAhY3VycmVudF91c2VyLm5pbD8KKyAgZW5kCisgIAorICBkZWYgbG9nX291dAorICAgIHNlc3Npb24uZGVsZXRlKDp1c2VyX2lkKQorICAgIEBjdXJyZW50X3VzZXIgPSBuaWwKKyAgZW5kCitlbmRAQCAtMCwwICsxLDUgQEAKKyAgPGZvb3RlciBjbGFzcz0iZm9vdGVyIj4KKyAgICA8c21hbGw+CisgICAgICBDcmVhdGVkIGJ5IFNvbm55IEtqZWxsYmVyZworICAgIDwvc21hbGw+CisgIDwvZm9vdGVyPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMCwwICsxLDE2IEBACisgIDxoZWFkZXI+CisgICAgPGgxPmNvb2wgaGVhZGVyPC9oMT4KKyAgICA8JT0gbGlua190byAiV2ViYnJhbXZlcmsiLCByb290X3BhdGgsIGlkOiAibG9nbyIgJT4KKyAgICA8bmF2PgorICAgICAgPHVsIGNsYXNzPSJuYXZiYXIiPgorICAgICAgICA8bGk+PCU9IGxpbmtfdG8gIkhvbWUiLCAgIHJvb3RfcGF0aCAlPjwvbGk+CisgICAgICAgICAgPGxpPiA8JT0gbG9nZ2VkX2luPyAlPiA8L2xpPgorICAgICAgICA8JSBpZiBsb2dnZWRfaW4/ICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJBUEkta2V5cyIsIGN1cnJlbnRfdXNlciAlPjwvbGk+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgb3V0IiwgbG9nb3V0X3BhdGgsIG1ldGhvZDogImRlbGV0ZSIgJT48L2xpPgorICAgICAgICA8JSBlbHNlICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgaW4iLCBsb2dpbl9wYXRoICU+PC9saT4KKyAgICAgICAgPCUgZW5kICU+CisgICAgICA8L3VsPiAgICAgIAorICAgIDwvbmF2PgorICA8L2hlYWRlcj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTAsMCArMSw0IEBACis8IS0tW2lmIGx0IElFIDldPgorICA8c2NyaXB0IHNyYz0iLy9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvaHRtbDVzaGl2L3IyOS9odG1sNS5taW4uanMiPgorICA8L3NjcmlwdD4KKzwhW2VuZGlmXS0tPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwxNyArMSwyMCBAQAogPCFET0NUWVBFIGh0bWw+CiA8aHRtbD4KIDxoZWFkPgotICA8dGl0bGU+V29ya3NwYWNlPC90aXRsZT4KKyAgICA8dGl0bGU+PCU9IHlpZWxkKDp0aXRsZSkgJT48L3RpdGxlPgogICA8JT0gc3R5bGVzaGVldF9saW5rX3RhZyAgICAnYXBwbGljYXRpb24nLCBtZWRpYTogJ2FsbCcsICdkYXRhLXR1cmJvbGlua3MtdHJhY2snID0+IHRydWUgJT4KICAgPCU9IGphdmFzY3JpcHRfaW5jbHVkZV90YWcgJ2FwcGxpY2F0aW9uJywgJ2RhdGEtdHVyYm9saW5rcy10cmFjaycgPT4gdHJ1ZSAlPgogICA8JT0gY3NyZl9tZXRhX3RhZ3MgJT4KKyAgPCU9IHJlbmRlciAnbGF5b3V0cy9zaGltJyAlPgogPC9oZWFkPgogPGJvZHk+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvaGVhZGVyJyAlPgogICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPjwvZGl2PgogICA8JT0geWllbGQgJT4KICAgICA8JSBmbGFzaC5lYWNoIGRvIHxtZXNzYWdlX3R5cGUsIG1lc3NhZ2V8ICU+Ci0gICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtPCU9IG1lc3NhZ2VfdHlwZSAlPiI+PCU9IG1lc3NhZ2UgJT48L2Rpdj4KKyAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LTwlPSBtZXNzYWdlX3R5cGUgJT4iPjwlPSBtZXNzYWdlICU+PC9kaXY+CiAgICAgPCUgZW5kICU+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvZm9vdGVyJyAlPgogICA8JT0gZGVidWcocGFyYW1zKSBpZiBSYWlscy5lbnYuZGV2ZWxvcG1lbnQ/ICU+CiA8L2JvZHk+CiA8L2h0bWw+QEAgLTAsMCArMSw1IEBACis8JSBwcm92aWRlKDp0aXRsZSwgIkhvbWUiKSAlPgorPGgyPldlbGNvbWU8L2gyPgorPHA+CisgICAgRG8gY29vbCBzdHVmZiwgcGxlYXNlLgorPC9wPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwyICswLDAgQEAKLTxoMT5QYWdlcyNzaWdudXA8L2gxPgotPHA+RmluZCBtZSBpbiBhcHAvdmlld3MvcGFnZXMvc2lnbnVwLmh0bWwuZXJiPC9wPkBAIC0wLDAgKzEsMTQgQEAKKzxkaXYgY2xhc3M9ImZvcm0gbG9naW4iPgorICA8JT0gZm9ybV9mb3IoOnNlc3Npb24sIHVybDogbG9naW5fcGF0aCkgZG8gfGZ8ICU+CisKKyAgICA8JT0gZi5sYWJlbCA6ZW1haWwgJT4KKyAgICA8JT0gZi5lbWFpbF9maWVsZCA6ZW1haWwgJT4KKworICAgIDwlPSBmLmxhYmVsIDpwYXNzd29yZCAlPgorICAgIDwlPSBmLnBhc3N3b3JkX2ZpZWxkIDpwYXNzd29yZCAlPgorCisgICAgPCU9IGYuc3VibWl0ICJMb2cgaW4iICU+CisgIDwlIGVuZCAlPgorCisgIDxwPm9yIDwlPSBsaW5rX3RvICJTaWduIHVwIiwgc2lnbnVwX3BhdGggJT48L3A+Cis8L2Rpdj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTEsOSArMSwxNCBAQAogUmFpbHMuYXBwbGljYXRpb24ucm91dGVzLmRyYXcgZG8KICAgCi0gIHJvb3QgJ2FwcGxpY2F0aW9uI2hlbGxvJwotICBnZXQgJ3BhZ2VzL3NpZ251cCcKLSAgZ2V0ICd1c2Vycy9uZXcnCi0gIGdldCAnc2lnbnVwJyA9PiAndXNlcnMjbmV3JworICByb290ICAgICAgICAgICAgICAgICAgICAncGFnZXMjaG9tZScKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3BhZ2VzL3NpZ251cCcKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3VzZXJzL25ldycKKyAgZ2V0ICAgICAgICdzaWdudXAnICA9PiAgJ3VzZXJzI25ldycKKyAgZ2V0ICAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI25ldycKKyAgcG9zdCAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI2NyZWF0ZScKKyAgZGVsZXRlICAgICdsb2dvdXQnICA9PiAgJ3Nlc3Npb25zI2Rlc3Ryb3knCisgIAorICAKICAgcmVzb3VyY2VzIDp1c2VycwogICAKICAgQEAgLTAsMCArMSw5IEBACityZXF1aXJlICd0ZXN0X2hlbHBlcicKKworY2xhc3MgU2Vzc2lvbnNDb250cm9sbGVyVGVzdCA8IEFjdGlvbkNvbnRyb2xsZXI6OlRlc3RDYXNlCisgIHRlc3QgInNob3VsZCBnZXQgbmV3IiBkbworICAgIGdldCA6bmV3CisgICAgYXNzZXJ0X3Jlc3BvbnNlIDpzdWNjZXNzCisgIGVuZAorCitlbmQ="
    },
    {
        "repo": "webbramverk",
        "owner": "sk222sw",
        "timestamp": "2016-02-25T09:42:26Z",
        "message": "show user/:id",
        "committer": "sk222sw",
        "filename": "test/controllers/sessions_controller_test.rb",
        "code": "QEAgLTAsMCArMSwzIEBACisjIFBsYWNlIGFsbCB0aGUgYmVoYXZpb3JzIGFuZCBob29rcyByZWxhdGVkIHRvIHRoZSBtYXRjaGluZyBjb250cm9sbGVyIGhlcmUuCisjIEFsbCB0aGlzIGxvZ2ljIHdpbGwgYXV0b21hdGljYWxseSBiZSBhdmFpbGFibGUgaW4gYXBwbGljYXRpb24uanMuCisjIFlvdSBjYW4gdXNlIENvZmZlZVNjcmlwdCBpbiB0aGlzIGZpbGU6IGh0dHA6Ly9jb2ZmZWVzY3JpcHQub3JnL3VuZGVmaW5lZEBAIC0wLDAgKzEsMyBAQAorLy8gUGxhY2UgYWxsIHRoZSBzdHlsZXMgcmVsYXRlZCB0byB0aGUgU2Vzc2lvbnMgY29udHJvbGxlciBoZXJlLgorLy8gVGhleSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgaW5jbHVkZWQgaW4gYXBwbGljYXRpb24uY3NzLgorLy8gWW91IGNhbiB1c2UgU2FzcyAoU0NTUykgaGVyZTogaHR0cDovL3Nhc3MtbGFuZy5jb20vQEAgLTIsOSArMiw1IEBAIGNsYXNzIEFwcGxpY2F0aW9uQ29udHJvbGxlciA8IEFjdGlvbkNvbnRyb2xsZXI6OkJhc2UKICAgIyBQcmV2ZW50IENTUkYgYXR0YWNrcyBieSByYWlzaW5nIGFuIGV4Y2VwdGlvbi4KICAgIyBGb3IgQVBJcywgeW91IG1heSB3YW50IHRvIHVzZSA6bnVsbF9zZXNzaW9uIGluc3RlYWQuCiAgIHByb3RlY3RfZnJvbV9mb3JnZXJ5IHdpdGg6IDpleGNlcHRpb24KLQotICBkZWYgaGVsbG8KLSAgICByZW5kZXIgdGV4dDogImhlbGxvIHdvcmxkIgotICBlbmQKLQorICBpbmNsdWRlIFNlc3Npb25zSGVscGVyCiBlbmRAQCAtMSw0ICsxLDggQEAKIGNsYXNzIFBhZ2VzQ29udHJvbGxlciA8IEFwcGxpY2F0aW9uQ29udHJvbGxlcgogICBkZWYgc2lnbnVwCiAgIGVuZAorICAKKyAgZGVmIGhvbWUKKyAgICBAdGl0bGUgPSAiSG9tZSIKKyAgZW5kCiBlbmRAQCAtMCwwICsxLDIzIEBACitjbGFzcyBTZXNzaW9uc0NvbnRyb2xsZXIgPCBBcHBsaWNhdGlvbkNvbnRyb2xsZXIKKyAgZGVmIG5ldworICAgIEB0aXRsZSA9ICJTaWduIGluIgorICBlbmQKKyAgCisgIGRlZiBjcmVhdGUKKworICAgIHVzZXIgPSBVc2VyLmZpbmRfYnkoZW1haWw6IHBhcmFtc1s6c2Vzc2lvbl1bOmVtYWlsXS5kb3duY2FzZSkKKyAgICBpZiB1c2VyICYmIHVzZXIuYXV0aGVudGljYXRlKHBhcmFtc1s6c2Vzc2lvbl1bOnBhc3N3b3JkXSkKKyAgICAgIGxvZ19pbiB1c2VyCisgICAgICByZWRpcmVjdF90byB1c2VyCisgICAgZWxzZQorICAgICAgIyBmbGFzaC5ub3cgYmVjYXVzZSB0aGUgInJlbmRlciAnbmV3JyIgZG9lcyBub3QgY291bnQgYXMgYSBHRVQtcmVxCisgICAgICBmbGFzaC5ub3dbOmRhbmdlcl0gPSAiTG9nIGluIGZhaWxlZCwgbWFrZSBzdXJlIHlvdSBzcGVsbGVkIGV2ZXJ5dGhpbmcgY29ycmVjdGx5LiIKKyAgICAgIHJlbmRlciAnbmV3JworICAgIGVuZAorICBlbmQKKyAgCisgIGRlZiBkZXN0cm95CisgICAgbG9nX291dAorICAgIHJlZGlyZWN0X3RvIHJvb3RfcGF0aAorICBlbmQKK2VuZEBAIC0xMSw2ICsxMSw3IEBAIGRlZiBuZXcKICAgZGVmIGNyZWF0ZQogICAgIEB1c2VyID0gVXNlci5uZXcodXNlcl9wYXJhbXMpCiAgICAgaWYgQHVzZXIuc2F2ZQorICAgICAgbG9nX2luIEB1c2VyCiAgICAgICBmbGFzaFs6c3VjY2Vzc10gPSAiTmV3IHVzZXIgY3JlYXRlZCIKICAgICAgIHJlZGlyZWN0X3RvIEB1c2VyCiAgICAgZWxzZUBAIC0wLDAgKzEsMTkgQEAKK21vZHVsZSBTZXNzaW9uc0hlbHBlcgorCisgIGRlZiBsb2dfaW4odXNlcikKKyAgICBzZXNzaW9uWzp1c2VyX2lkXSA9IHVzZXIuaWQKKyAgZW5kCisKKyAgZGVmIGN1cnJlbnRfdXNlcgorICAgIEBjdXJyZW50X3VzZXIgfHw9IFVzZXIuZmluZF9ieShpZDogc2Vzc2lvbls6dXNlcl9pZF0pCisgIGVuZAorICAKKyAgZGVmIGxvZ2dlZF9pbj8KKyAgICAhY3VycmVudF91c2VyLm5pbD8KKyAgZW5kCisgIAorICBkZWYgbG9nX291dAorICAgIHNlc3Npb24uZGVsZXRlKDp1c2VyX2lkKQorICAgIEBjdXJyZW50X3VzZXIgPSBuaWwKKyAgZW5kCitlbmRAQCAtMCwwICsxLDUgQEAKKyAgPGZvb3RlciBjbGFzcz0iZm9vdGVyIj4KKyAgICA8c21hbGw+CisgICAgICBDcmVhdGVkIGJ5IFNvbm55IEtqZWxsYmVyZworICAgIDwvc21hbGw+CisgIDwvZm9vdGVyPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMCwwICsxLDE2IEBACisgIDxoZWFkZXI+CisgICAgPGgxPmNvb2wgaGVhZGVyPC9oMT4KKyAgICA8JT0gbGlua190byAiV2ViYnJhbXZlcmsiLCByb290X3BhdGgsIGlkOiAibG9nbyIgJT4KKyAgICA8bmF2PgorICAgICAgPHVsIGNsYXNzPSJuYXZiYXIiPgorICAgICAgICA8bGk+PCU9IGxpbmtfdG8gIkhvbWUiLCAgIHJvb3RfcGF0aCAlPjwvbGk+CisgICAgICAgICAgPGxpPiA8JT0gbG9nZ2VkX2luPyAlPiA8L2xpPgorICAgICAgICA8JSBpZiBsb2dnZWRfaW4/ICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJBUEkta2V5cyIsIGN1cnJlbnRfdXNlciAlPjwvbGk+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgb3V0IiwgbG9nb3V0X3BhdGgsIG1ldGhvZDogImRlbGV0ZSIgJT48L2xpPgorICAgICAgICA8JSBlbHNlICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgaW4iLCBsb2dpbl9wYXRoICU+PC9saT4KKyAgICAgICAgPCUgZW5kICU+CisgICAgICA8L3VsPiAgICAgIAorICAgIDwvbmF2PgorICA8L2hlYWRlcj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTAsMCArMSw0IEBACis8IS0tW2lmIGx0IElFIDldPgorICA8c2NyaXB0IHNyYz0iLy9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvaHRtbDVzaGl2L3IyOS9odG1sNS5taW4uanMiPgorICA8L3NjcmlwdD4KKzwhW2VuZGlmXS0tPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwxNyArMSwyMCBAQAogPCFET0NUWVBFIGh0bWw+CiA8aHRtbD4KIDxoZWFkPgotICA8dGl0bGU+V29ya3NwYWNlPC90aXRsZT4KKyAgICA8dGl0bGU+PCU9IHlpZWxkKDp0aXRsZSkgJT48L3RpdGxlPgogICA8JT0gc3R5bGVzaGVldF9saW5rX3RhZyAgICAnYXBwbGljYXRpb24nLCBtZWRpYTogJ2FsbCcsICdkYXRhLXR1cmJvbGlua3MtdHJhY2snID0+IHRydWUgJT4KICAgPCU9IGphdmFzY3JpcHRfaW5jbHVkZV90YWcgJ2FwcGxpY2F0aW9uJywgJ2RhdGEtdHVyYm9saW5rcy10cmFjaycgPT4gdHJ1ZSAlPgogICA8JT0gY3NyZl9tZXRhX3RhZ3MgJT4KKyAgPCU9IHJlbmRlciAnbGF5b3V0cy9zaGltJyAlPgogPC9oZWFkPgogPGJvZHk+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvaGVhZGVyJyAlPgogICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPjwvZGl2PgogICA8JT0geWllbGQgJT4KICAgICA8JSBmbGFzaC5lYWNoIGRvIHxtZXNzYWdlX3R5cGUsIG1lc3NhZ2V8ICU+Ci0gICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtPCU9IG1lc3NhZ2VfdHlwZSAlPiI+PCU9IG1lc3NhZ2UgJT48L2Rpdj4KKyAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LTwlPSBtZXNzYWdlX3R5cGUgJT4iPjwlPSBtZXNzYWdlICU+PC9kaXY+CiAgICAgPCUgZW5kICU+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvZm9vdGVyJyAlPgogICA8JT0gZGVidWcocGFyYW1zKSBpZiBSYWlscy5lbnYuZGV2ZWxvcG1lbnQ/ICU+CiA8L2JvZHk+CiA8L2h0bWw+QEAgLTAsMCArMSw1IEBACis8JSBwcm92aWRlKDp0aXRsZSwgIkhvbWUiKSAlPgorPGgyPldlbGNvbWU8L2gyPgorPHA+CisgICAgRG8gY29vbCBzdHVmZiwgcGxlYXNlLgorPC9wPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwyICswLDAgQEAKLTxoMT5QYWdlcyNzaWdudXA8L2gxPgotPHA+RmluZCBtZSBpbiBhcHAvdmlld3MvcGFnZXMvc2lnbnVwLmh0bWwuZXJiPC9wPkBAIC0wLDAgKzEsMTQgQEAKKzxkaXYgY2xhc3M9ImZvcm0gbG9naW4iPgorICA8JT0gZm9ybV9mb3IoOnNlc3Npb24sIHVybDogbG9naW5fcGF0aCkgZG8gfGZ8ICU+CisKKyAgICA8JT0gZi5sYWJlbCA6ZW1haWwgJT4KKyAgICA8JT0gZi5lbWFpbF9maWVsZCA6ZW1haWwgJT4KKworICAgIDwlPSBmLmxhYmVsIDpwYXNzd29yZCAlPgorICAgIDwlPSBmLnBhc3N3b3JkX2ZpZWxkIDpwYXNzd29yZCAlPgorCisgICAgPCU9IGYuc3VibWl0ICJMb2cgaW4iICU+CisgIDwlIGVuZCAlPgorCisgIDxwPm9yIDwlPSBsaW5rX3RvICJTaWduIHVwIiwgc2lnbnVwX3BhdGggJT48L3A+Cis8L2Rpdj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTEsOSArMSwxNCBAQAogUmFpbHMuYXBwbGljYXRpb24ucm91dGVzLmRyYXcgZG8KICAgCi0gIHJvb3QgJ2FwcGxpY2F0aW9uI2hlbGxvJwotICBnZXQgJ3BhZ2VzL3NpZ251cCcKLSAgZ2V0ICd1c2Vycy9uZXcnCi0gIGdldCAnc2lnbnVwJyA9PiAndXNlcnMjbmV3JworICByb290ICAgICAgICAgICAgICAgICAgICAncGFnZXMjaG9tZScKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3BhZ2VzL3NpZ251cCcKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3VzZXJzL25ldycKKyAgZ2V0ICAgICAgICdzaWdudXAnICA9PiAgJ3VzZXJzI25ldycKKyAgZ2V0ICAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI25ldycKKyAgcG9zdCAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI2NyZWF0ZScKKyAgZGVsZXRlICAgICdsb2dvdXQnICA9PiAgJ3Nlc3Npb25zI2Rlc3Ryb3knCisgIAorICAKICAgcmVzb3VyY2VzIDp1c2VycwogICAKICAgQEAgLTAsMCArMSw5IEBACityZXF1aXJlICd0ZXN0X2hlbHBlcicKKworY2xhc3MgU2Vzc2lvbnNDb250cm9sbGVyVGVzdCA8IEFjdGlvbkNvbnRyb2xsZXI6OlRlc3RDYXNlCisgIHRlc3QgInNob3VsZCBnZXQgbmV3IiBkbworICAgIGdldCA6bmV3CisgICAgYXNzZXJ0X3Jlc3BvbnNlIDpzdWNjZXNzCisgIGVuZAorCitlbmQ="
    },
    {
        "repo": "webbramverk",
        "owner": "sk222sw",
        "timestamp": "2016-02-25T09:26:49Z",
        "message": "debug info in html if development",
        "committer": "sk222sw",
        "filename": "test/controllers/sessions_controller_test.rb",
        "code": "QEAgLTAsMCArMSwzIEBACisjIFBsYWNlIGFsbCB0aGUgYmVoYXZpb3JzIGFuZCBob29rcyByZWxhdGVkIHRvIHRoZSBtYXRjaGluZyBjb250cm9sbGVyIGhlcmUuCisjIEFsbCB0aGlzIGxvZ2ljIHdpbGwgYXV0b21hdGljYWxseSBiZSBhdmFpbGFibGUgaW4gYXBwbGljYXRpb24uanMuCisjIFlvdSBjYW4gdXNlIENvZmZlZVNjcmlwdCBpbiB0aGlzIGZpbGU6IGh0dHA6Ly9jb2ZmZWVzY3JpcHQub3JnL3VuZGVmaW5lZEBAIC0wLDAgKzEsMyBAQAorLy8gUGxhY2UgYWxsIHRoZSBzdHlsZXMgcmVsYXRlZCB0byB0aGUgU2Vzc2lvbnMgY29udHJvbGxlciBoZXJlLgorLy8gVGhleSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgaW5jbHVkZWQgaW4gYXBwbGljYXRpb24uY3NzLgorLy8gWW91IGNhbiB1c2UgU2FzcyAoU0NTUykgaGVyZTogaHR0cDovL3Nhc3MtbGFuZy5jb20vQEAgLTIsOSArMiw1IEBAIGNsYXNzIEFwcGxpY2F0aW9uQ29udHJvbGxlciA8IEFjdGlvbkNvbnRyb2xsZXI6OkJhc2UKICAgIyBQcmV2ZW50IENTUkYgYXR0YWNrcyBieSByYWlzaW5nIGFuIGV4Y2VwdGlvbi4KICAgIyBGb3IgQVBJcywgeW91IG1heSB3YW50IHRvIHVzZSA6bnVsbF9zZXNzaW9uIGluc3RlYWQuCiAgIHByb3RlY3RfZnJvbV9mb3JnZXJ5IHdpdGg6IDpleGNlcHRpb24KLQotICBkZWYgaGVsbG8KLSAgICByZW5kZXIgdGV4dDogImhlbGxvIHdvcmxkIgotICBlbmQKLQorICBpbmNsdWRlIFNlc3Npb25zSGVscGVyCiBlbmRAQCAtMSw0ICsxLDggQEAKIGNsYXNzIFBhZ2VzQ29udHJvbGxlciA8IEFwcGxpY2F0aW9uQ29udHJvbGxlcgogICBkZWYgc2lnbnVwCiAgIGVuZAorICAKKyAgZGVmIGhvbWUKKyAgICBAdGl0bGUgPSAiSG9tZSIKKyAgZW5kCiBlbmRAQCAtMCwwICsxLDIzIEBACitjbGFzcyBTZXNzaW9uc0NvbnRyb2xsZXIgPCBBcHBsaWNhdGlvbkNvbnRyb2xsZXIKKyAgZGVmIG5ldworICAgIEB0aXRsZSA9ICJTaWduIGluIgorICBlbmQKKyAgCisgIGRlZiBjcmVhdGUKKworICAgIHVzZXIgPSBVc2VyLmZpbmRfYnkoZW1haWw6IHBhcmFtc1s6c2Vzc2lvbl1bOmVtYWlsXS5kb3duY2FzZSkKKyAgICBpZiB1c2VyICYmIHVzZXIuYXV0aGVudGljYXRlKHBhcmFtc1s6c2Vzc2lvbl1bOnBhc3N3b3JkXSkKKyAgICAgIGxvZ19pbiB1c2VyCisgICAgICByZWRpcmVjdF90byB1c2VyCisgICAgZWxzZQorICAgICAgIyBmbGFzaC5ub3cgYmVjYXVzZSB0aGUgInJlbmRlciAnbmV3JyIgZG9lcyBub3QgY291bnQgYXMgYSBHRVQtcmVxCisgICAgICBmbGFzaC5ub3dbOmRhbmdlcl0gPSAiTG9nIGluIGZhaWxlZCwgbWFrZSBzdXJlIHlvdSBzcGVsbGVkIGV2ZXJ5dGhpbmcgY29ycmVjdGx5LiIKKyAgICAgIHJlbmRlciAnbmV3JworICAgIGVuZAorICBlbmQKKyAgCisgIGRlZiBkZXN0cm95CisgICAgbG9nX291dAorICAgIHJlZGlyZWN0X3RvIHJvb3RfcGF0aAorICBlbmQKK2VuZEBAIC0xMSw2ICsxMSw3IEBAIGRlZiBuZXcKICAgZGVmIGNyZWF0ZQogICAgIEB1c2VyID0gVXNlci5uZXcodXNlcl9wYXJhbXMpCiAgICAgaWYgQHVzZXIuc2F2ZQorICAgICAgbG9nX2luIEB1c2VyCiAgICAgICBmbGFzaFs6c3VjY2Vzc10gPSAiTmV3IHVzZXIgY3JlYXRlZCIKICAgICAgIHJlZGlyZWN0X3RvIEB1c2VyCiAgICAgZWxzZUBAIC0wLDAgKzEsMTkgQEAKK21vZHVsZSBTZXNzaW9uc0hlbHBlcgorCisgIGRlZiBsb2dfaW4odXNlcikKKyAgICBzZXNzaW9uWzp1c2VyX2lkXSA9IHVzZXIuaWQKKyAgZW5kCisKKyAgZGVmIGN1cnJlbnRfdXNlcgorICAgIEBjdXJyZW50X3VzZXIgfHw9IFVzZXIuZmluZF9ieShpZDogc2Vzc2lvbls6dXNlcl9pZF0pCisgIGVuZAorICAKKyAgZGVmIGxvZ2dlZF9pbj8KKyAgICAhY3VycmVudF91c2VyLm5pbD8KKyAgZW5kCisgIAorICBkZWYgbG9nX291dAorICAgIHNlc3Npb24uZGVsZXRlKDp1c2VyX2lkKQorICAgIEBjdXJyZW50X3VzZXIgPSBuaWwKKyAgZW5kCitlbmRAQCAtMCwwICsxLDUgQEAKKyAgPGZvb3RlciBjbGFzcz0iZm9vdGVyIj4KKyAgICA8c21hbGw+CisgICAgICBDcmVhdGVkIGJ5IFNvbm55IEtqZWxsYmVyZworICAgIDwvc21hbGw+CisgIDwvZm9vdGVyPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMCwwICsxLDE2IEBACisgIDxoZWFkZXI+CisgICAgPGgxPmNvb2wgaGVhZGVyPC9oMT4KKyAgICA8JT0gbGlua190byAiV2ViYnJhbXZlcmsiLCByb290X3BhdGgsIGlkOiAibG9nbyIgJT4KKyAgICA8bmF2PgorICAgICAgPHVsIGNsYXNzPSJuYXZiYXIiPgorICAgICAgICA8bGk+PCU9IGxpbmtfdG8gIkhvbWUiLCAgIHJvb3RfcGF0aCAlPjwvbGk+CisgICAgICAgICAgPGxpPiA8JT0gbG9nZ2VkX2luPyAlPiA8L2xpPgorICAgICAgICA8JSBpZiBsb2dnZWRfaW4/ICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJBUEkta2V5cyIsIGN1cnJlbnRfdXNlciAlPjwvbGk+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgb3V0IiwgbG9nb3V0X3BhdGgsIG1ldGhvZDogImRlbGV0ZSIgJT48L2xpPgorICAgICAgICA8JSBlbHNlICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgaW4iLCBsb2dpbl9wYXRoICU+PC9saT4KKyAgICAgICAgPCUgZW5kICU+CisgICAgICA8L3VsPiAgICAgIAorICAgIDwvbmF2PgorICA8L2hlYWRlcj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTAsMCArMSw0IEBACis8IS0tW2lmIGx0IElFIDldPgorICA8c2NyaXB0IHNyYz0iLy9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvaHRtbDVzaGl2L3IyOS9odG1sNS5taW4uanMiPgorICA8L3NjcmlwdD4KKzwhW2VuZGlmXS0tPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwxNyArMSwyMCBAQAogPCFET0NUWVBFIGh0bWw+CiA8aHRtbD4KIDxoZWFkPgotICA8dGl0bGU+V29ya3NwYWNlPC90aXRsZT4KKyAgICA8dGl0bGU+PCU9IHlpZWxkKDp0aXRsZSkgJT48L3RpdGxlPgogICA8JT0gc3R5bGVzaGVldF9saW5rX3RhZyAgICAnYXBwbGljYXRpb24nLCBtZWRpYTogJ2FsbCcsICdkYXRhLXR1cmJvbGlua3MtdHJhY2snID0+IHRydWUgJT4KICAgPCU9IGphdmFzY3JpcHRfaW5jbHVkZV90YWcgJ2FwcGxpY2F0aW9uJywgJ2RhdGEtdHVyYm9saW5rcy10cmFjaycgPT4gdHJ1ZSAlPgogICA8JT0gY3NyZl9tZXRhX3RhZ3MgJT4KKyAgPCU9IHJlbmRlciAnbGF5b3V0cy9zaGltJyAlPgogPC9oZWFkPgogPGJvZHk+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvaGVhZGVyJyAlPgogICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPjwvZGl2PgogICA8JT0geWllbGQgJT4KICAgICA8JSBmbGFzaC5lYWNoIGRvIHxtZXNzYWdlX3R5cGUsIG1lc3NhZ2V8ICU+Ci0gICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtPCU9IG1lc3NhZ2VfdHlwZSAlPiI+PCU9IG1lc3NhZ2UgJT48L2Rpdj4KKyAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LTwlPSBtZXNzYWdlX3R5cGUgJT4iPjwlPSBtZXNzYWdlICU+PC9kaXY+CiAgICAgPCUgZW5kICU+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvZm9vdGVyJyAlPgogICA8JT0gZGVidWcocGFyYW1zKSBpZiBSYWlscy5lbnYuZGV2ZWxvcG1lbnQ/ICU+CiA8L2JvZHk+CiA8L2h0bWw+QEAgLTAsMCArMSw1IEBACis8JSBwcm92aWRlKDp0aXRsZSwgIkhvbWUiKSAlPgorPGgyPldlbGNvbWU8L2gyPgorPHA+CisgICAgRG8gY29vbCBzdHVmZiwgcGxlYXNlLgorPC9wPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwyICswLDAgQEAKLTxoMT5QYWdlcyNzaWdudXA8L2gxPgotPHA+RmluZCBtZSBpbiBhcHAvdmlld3MvcGFnZXMvc2lnbnVwLmh0bWwuZXJiPC9wPkBAIC0wLDAgKzEsMTQgQEAKKzxkaXYgY2xhc3M9ImZvcm0gbG9naW4iPgorICA8JT0gZm9ybV9mb3IoOnNlc3Npb24sIHVybDogbG9naW5fcGF0aCkgZG8gfGZ8ICU+CisKKyAgICA8JT0gZi5sYWJlbCA6ZW1haWwgJT4KKyAgICA8JT0gZi5lbWFpbF9maWVsZCA6ZW1haWwgJT4KKworICAgIDwlPSBmLmxhYmVsIDpwYXNzd29yZCAlPgorICAgIDwlPSBmLnBhc3N3b3JkX2ZpZWxkIDpwYXNzd29yZCAlPgorCisgICAgPCU9IGYuc3VibWl0ICJMb2cgaW4iICU+CisgIDwlIGVuZCAlPgorCisgIDxwPm9yIDwlPSBsaW5rX3RvICJTaWduIHVwIiwgc2lnbnVwX3BhdGggJT48L3A+Cis8L2Rpdj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTEsOSArMSwxNCBAQAogUmFpbHMuYXBwbGljYXRpb24ucm91dGVzLmRyYXcgZG8KICAgCi0gIHJvb3QgJ2FwcGxpY2F0aW9uI2hlbGxvJwotICBnZXQgJ3BhZ2VzL3NpZ251cCcKLSAgZ2V0ICd1c2Vycy9uZXcnCi0gIGdldCAnc2lnbnVwJyA9PiAndXNlcnMjbmV3JworICByb290ICAgICAgICAgICAgICAgICAgICAncGFnZXMjaG9tZScKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3BhZ2VzL3NpZ251cCcKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3VzZXJzL25ldycKKyAgZ2V0ICAgICAgICdzaWdudXAnICA9PiAgJ3VzZXJzI25ldycKKyAgZ2V0ICAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI25ldycKKyAgcG9zdCAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI2NyZWF0ZScKKyAgZGVsZXRlICAgICdsb2dvdXQnICA9PiAgJ3Nlc3Npb25zI2Rlc3Ryb3knCisgIAorICAKICAgcmVzb3VyY2VzIDp1c2VycwogICAKICAgQEAgLTAsMCArMSw5IEBACityZXF1aXJlICd0ZXN0X2hlbHBlcicKKworY2xhc3MgU2Vzc2lvbnNDb250cm9sbGVyVGVzdCA8IEFjdGlvbkNvbnRyb2xsZXI6OlRlc3RDYXNlCisgIHRlc3QgInNob3VsZCBnZXQgbmV3IiBkbworICAgIGdldCA6bmV3CisgICAgYXNzZXJ0X3Jlc3BvbnNlIDpzdWNjZXNzCisgIGVuZAorCitlbmQ="
    },
    {
        "repo": "webbramverk",
        "owner": "sk222sw",
        "timestamp": "2016-02-24T22:17:19Z",
        "message": "password",
        "committer": "sk222sw",
        "filename": "test/controllers/sessions_controller_test.rb",
        "code": "QEAgLTAsMCArMSwzIEBACisjIFBsYWNlIGFsbCB0aGUgYmVoYXZpb3JzIGFuZCBob29rcyByZWxhdGVkIHRvIHRoZSBtYXRjaGluZyBjb250cm9sbGVyIGhlcmUuCisjIEFsbCB0aGlzIGxvZ2ljIHdpbGwgYXV0b21hdGljYWxseSBiZSBhdmFpbGFibGUgaW4gYXBwbGljYXRpb24uanMuCisjIFlvdSBjYW4gdXNlIENvZmZlZVNjcmlwdCBpbiB0aGlzIGZpbGU6IGh0dHA6Ly9jb2ZmZWVzY3JpcHQub3JnL3VuZGVmaW5lZEBAIC0wLDAgKzEsMyBAQAorLy8gUGxhY2UgYWxsIHRoZSBzdHlsZXMgcmVsYXRlZCB0byB0aGUgU2Vzc2lvbnMgY29udHJvbGxlciBoZXJlLgorLy8gVGhleSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgaW5jbHVkZWQgaW4gYXBwbGljYXRpb24uY3NzLgorLy8gWW91IGNhbiB1c2UgU2FzcyAoU0NTUykgaGVyZTogaHR0cDovL3Nhc3MtbGFuZy5jb20vQEAgLTIsOSArMiw1IEBAIGNsYXNzIEFwcGxpY2F0aW9uQ29udHJvbGxlciA8IEFjdGlvbkNvbnRyb2xsZXI6OkJhc2UKICAgIyBQcmV2ZW50IENTUkYgYXR0YWNrcyBieSByYWlzaW5nIGFuIGV4Y2VwdGlvbi4KICAgIyBGb3IgQVBJcywgeW91IG1heSB3YW50IHRvIHVzZSA6bnVsbF9zZXNzaW9uIGluc3RlYWQuCiAgIHByb3RlY3RfZnJvbV9mb3JnZXJ5IHdpdGg6IDpleGNlcHRpb24KLQotICBkZWYgaGVsbG8KLSAgICByZW5kZXIgdGV4dDogImhlbGxvIHdvcmxkIgotICBlbmQKLQorICBpbmNsdWRlIFNlc3Npb25zSGVscGVyCiBlbmRAQCAtMSw0ICsxLDggQEAKIGNsYXNzIFBhZ2VzQ29udHJvbGxlciA8IEFwcGxpY2F0aW9uQ29udHJvbGxlcgogICBkZWYgc2lnbnVwCiAgIGVuZAorICAKKyAgZGVmIGhvbWUKKyAgICBAdGl0bGUgPSAiSG9tZSIKKyAgZW5kCiBlbmRAQCAtMCwwICsxLDIzIEBACitjbGFzcyBTZXNzaW9uc0NvbnRyb2xsZXIgPCBBcHBsaWNhdGlvbkNvbnRyb2xsZXIKKyAgZGVmIG5ldworICAgIEB0aXRsZSA9ICJTaWduIGluIgorICBlbmQKKyAgCisgIGRlZiBjcmVhdGUKKworICAgIHVzZXIgPSBVc2VyLmZpbmRfYnkoZW1haWw6IHBhcmFtc1s6c2Vzc2lvbl1bOmVtYWlsXS5kb3duY2FzZSkKKyAgICBpZiB1c2VyICYmIHVzZXIuYXV0aGVudGljYXRlKHBhcmFtc1s6c2Vzc2lvbl1bOnBhc3N3b3JkXSkKKyAgICAgIGxvZ19pbiB1c2VyCisgICAgICByZWRpcmVjdF90byB1c2VyCisgICAgZWxzZQorICAgICAgIyBmbGFzaC5ub3cgYmVjYXVzZSB0aGUgInJlbmRlciAnbmV3JyIgZG9lcyBub3QgY291bnQgYXMgYSBHRVQtcmVxCisgICAgICBmbGFzaC5ub3dbOmRhbmdlcl0gPSAiTG9nIGluIGZhaWxlZCwgbWFrZSBzdXJlIHlvdSBzcGVsbGVkIGV2ZXJ5dGhpbmcgY29ycmVjdGx5LiIKKyAgICAgIHJlbmRlciAnbmV3JworICAgIGVuZAorICBlbmQKKyAgCisgIGRlZiBkZXN0cm95CisgICAgbG9nX291dAorICAgIHJlZGlyZWN0X3RvIHJvb3RfcGF0aAorICBlbmQKK2VuZEBAIC0xMSw2ICsxMSw3IEBAIGRlZiBuZXcKICAgZGVmIGNyZWF0ZQogICAgIEB1c2VyID0gVXNlci5uZXcodXNlcl9wYXJhbXMpCiAgICAgaWYgQHVzZXIuc2F2ZQorICAgICAgbG9nX2luIEB1c2VyCiAgICAgICBmbGFzaFs6c3VjY2Vzc10gPSAiTmV3IHVzZXIgY3JlYXRlZCIKICAgICAgIHJlZGlyZWN0X3RvIEB1c2VyCiAgICAgZWxzZUBAIC0wLDAgKzEsMTkgQEAKK21vZHVsZSBTZXNzaW9uc0hlbHBlcgorCisgIGRlZiBsb2dfaW4odXNlcikKKyAgICBzZXNzaW9uWzp1c2VyX2lkXSA9IHVzZXIuaWQKKyAgZW5kCisKKyAgZGVmIGN1cnJlbnRfdXNlcgorICAgIEBjdXJyZW50X3VzZXIgfHw9IFVzZXIuZmluZF9ieShpZDogc2Vzc2lvbls6dXNlcl9pZF0pCisgIGVuZAorICAKKyAgZGVmIGxvZ2dlZF9pbj8KKyAgICAhY3VycmVudF91c2VyLm5pbD8KKyAgZW5kCisgIAorICBkZWYgbG9nX291dAorICAgIHNlc3Npb24uZGVsZXRlKDp1c2VyX2lkKQorICAgIEBjdXJyZW50X3VzZXIgPSBuaWwKKyAgZW5kCitlbmRAQCAtMCwwICsxLDUgQEAKKyAgPGZvb3RlciBjbGFzcz0iZm9vdGVyIj4KKyAgICA8c21hbGw+CisgICAgICBDcmVhdGVkIGJ5IFNvbm55IEtqZWxsYmVyZworICAgIDwvc21hbGw+CisgIDwvZm9vdGVyPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMCwwICsxLDE2IEBACisgIDxoZWFkZXI+CisgICAgPGgxPmNvb2wgaGVhZGVyPC9oMT4KKyAgICA8JT0gbGlua190byAiV2ViYnJhbXZlcmsiLCByb290X3BhdGgsIGlkOiAibG9nbyIgJT4KKyAgICA8bmF2PgorICAgICAgPHVsIGNsYXNzPSJuYXZiYXIiPgorICAgICAgICA8bGk+PCU9IGxpbmtfdG8gIkhvbWUiLCAgIHJvb3RfcGF0aCAlPjwvbGk+CisgICAgICAgICAgPGxpPiA8JT0gbG9nZ2VkX2luPyAlPiA8L2xpPgorICAgICAgICA8JSBpZiBsb2dnZWRfaW4/ICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJBUEkta2V5cyIsIGN1cnJlbnRfdXNlciAlPjwvbGk+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgb3V0IiwgbG9nb3V0X3BhdGgsIG1ldGhvZDogImRlbGV0ZSIgJT48L2xpPgorICAgICAgICA8JSBlbHNlICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgaW4iLCBsb2dpbl9wYXRoICU+PC9saT4KKyAgICAgICAgPCUgZW5kICU+CisgICAgICA8L3VsPiAgICAgIAorICAgIDwvbmF2PgorICA8L2hlYWRlcj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTAsMCArMSw0IEBACis8IS0tW2lmIGx0IElFIDldPgorICA8c2NyaXB0IHNyYz0iLy9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvaHRtbDVzaGl2L3IyOS9odG1sNS5taW4uanMiPgorICA8L3NjcmlwdD4KKzwhW2VuZGlmXS0tPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwxNyArMSwyMCBAQAogPCFET0NUWVBFIGh0bWw+CiA8aHRtbD4KIDxoZWFkPgotICA8dGl0bGU+V29ya3NwYWNlPC90aXRsZT4KKyAgICA8dGl0bGU+PCU9IHlpZWxkKDp0aXRsZSkgJT48L3RpdGxlPgogICA8JT0gc3R5bGVzaGVldF9saW5rX3RhZyAgICAnYXBwbGljYXRpb24nLCBtZWRpYTogJ2FsbCcsICdkYXRhLXR1cmJvbGlua3MtdHJhY2snID0+IHRydWUgJT4KICAgPCU9IGphdmFzY3JpcHRfaW5jbHVkZV90YWcgJ2FwcGxpY2F0aW9uJywgJ2RhdGEtdHVyYm9saW5rcy10cmFjaycgPT4gdHJ1ZSAlPgogICA8JT0gY3NyZl9tZXRhX3RhZ3MgJT4KKyAgPCU9IHJlbmRlciAnbGF5b3V0cy9zaGltJyAlPgogPC9oZWFkPgogPGJvZHk+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvaGVhZGVyJyAlPgogICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPjwvZGl2PgogICA8JT0geWllbGQgJT4KICAgICA8JSBmbGFzaC5lYWNoIGRvIHxtZXNzYWdlX3R5cGUsIG1lc3NhZ2V8ICU+Ci0gICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtPCU9IG1lc3NhZ2VfdHlwZSAlPiI+PCU9IG1lc3NhZ2UgJT48L2Rpdj4KKyAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LTwlPSBtZXNzYWdlX3R5cGUgJT4iPjwlPSBtZXNzYWdlICU+PC9kaXY+CiAgICAgPCUgZW5kICU+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvZm9vdGVyJyAlPgogICA8JT0gZGVidWcocGFyYW1zKSBpZiBSYWlscy5lbnYuZGV2ZWxvcG1lbnQ/ICU+CiA8L2JvZHk+CiA8L2h0bWw+QEAgLTAsMCArMSw1IEBACis8JSBwcm92aWRlKDp0aXRsZSwgIkhvbWUiKSAlPgorPGgyPldlbGNvbWU8L2gyPgorPHA+CisgICAgRG8gY29vbCBzdHVmZiwgcGxlYXNlLgorPC9wPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwyICswLDAgQEAKLTxoMT5QYWdlcyNzaWdudXA8L2gxPgotPHA+RmluZCBtZSBpbiBhcHAvdmlld3MvcGFnZXMvc2lnbnVwLmh0bWwuZXJiPC9wPkBAIC0wLDAgKzEsMTQgQEAKKzxkaXYgY2xhc3M9ImZvcm0gbG9naW4iPgorICA8JT0gZm9ybV9mb3IoOnNlc3Npb24sIHVybDogbG9naW5fcGF0aCkgZG8gfGZ8ICU+CisKKyAgICA8JT0gZi5sYWJlbCA6ZW1haWwgJT4KKyAgICA8JT0gZi5lbWFpbF9maWVsZCA6ZW1haWwgJT4KKworICAgIDwlPSBmLmxhYmVsIDpwYXNzd29yZCAlPgorICAgIDwlPSBmLnBhc3N3b3JkX2ZpZWxkIDpwYXNzd29yZCAlPgorCisgICAgPCU9IGYuc3VibWl0ICJMb2cgaW4iICU+CisgIDwlIGVuZCAlPgorCisgIDxwPm9yIDwlPSBsaW5rX3RvICJTaWduIHVwIiwgc2lnbnVwX3BhdGggJT48L3A+Cis8L2Rpdj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTEsOSArMSwxNCBAQAogUmFpbHMuYXBwbGljYXRpb24ucm91dGVzLmRyYXcgZG8KICAgCi0gIHJvb3QgJ2FwcGxpY2F0aW9uI2hlbGxvJwotICBnZXQgJ3BhZ2VzL3NpZ251cCcKLSAgZ2V0ICd1c2Vycy9uZXcnCi0gIGdldCAnc2lnbnVwJyA9PiAndXNlcnMjbmV3JworICByb290ICAgICAgICAgICAgICAgICAgICAncGFnZXMjaG9tZScKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3BhZ2VzL3NpZ251cCcKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3VzZXJzL25ldycKKyAgZ2V0ICAgICAgICdzaWdudXAnICA9PiAgJ3VzZXJzI25ldycKKyAgZ2V0ICAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI25ldycKKyAgcG9zdCAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI2NyZWF0ZScKKyAgZGVsZXRlICAgICdsb2dvdXQnICA9PiAgJ3Nlc3Npb25zI2Rlc3Ryb3knCisgIAorICAKICAgcmVzb3VyY2VzIDp1c2VycwogICAKICAgQEAgLTAsMCArMSw5IEBACityZXF1aXJlICd0ZXN0X2hlbHBlcicKKworY2xhc3MgU2Vzc2lvbnNDb250cm9sbGVyVGVzdCA8IEFjdGlvbkNvbnRyb2xsZXI6OlRlc3RDYXNlCisgIHRlc3QgInNob3VsZCBnZXQgbmV3IiBkbworICAgIGdldCA6bmV3CisgICAgYXNzZXJ0X3Jlc3BvbnNlIDpzdWNjZXNzCisgIGVuZAorCitlbmQ="
    },
    {
        "repo": "webbramverk",
        "owner": "sk222sw",
        "timestamp": "2016-02-24T14:41:56Z",
        "message": "gemfile sqlite remove",
        "committer": "sk222sw",
        "filename": "test/controllers/sessions_controller_test.rb",
        "code": "QEAgLTAsMCArMSwzIEBACisjIFBsYWNlIGFsbCB0aGUgYmVoYXZpb3JzIGFuZCBob29rcyByZWxhdGVkIHRvIHRoZSBtYXRjaGluZyBjb250cm9sbGVyIGhlcmUuCisjIEFsbCB0aGlzIGxvZ2ljIHdpbGwgYXV0b21hdGljYWxseSBiZSBhdmFpbGFibGUgaW4gYXBwbGljYXRpb24uanMuCisjIFlvdSBjYW4gdXNlIENvZmZlZVNjcmlwdCBpbiB0aGlzIGZpbGU6IGh0dHA6Ly9jb2ZmZWVzY3JpcHQub3JnL3VuZGVmaW5lZEBAIC0wLDAgKzEsMyBAQAorLy8gUGxhY2UgYWxsIHRoZSBzdHlsZXMgcmVsYXRlZCB0byB0aGUgU2Vzc2lvbnMgY29udHJvbGxlciBoZXJlLgorLy8gVGhleSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgaW5jbHVkZWQgaW4gYXBwbGljYXRpb24uY3NzLgorLy8gWW91IGNhbiB1c2UgU2FzcyAoU0NTUykgaGVyZTogaHR0cDovL3Nhc3MtbGFuZy5jb20vQEAgLTIsOSArMiw1IEBAIGNsYXNzIEFwcGxpY2F0aW9uQ29udHJvbGxlciA8IEFjdGlvbkNvbnRyb2xsZXI6OkJhc2UKICAgIyBQcmV2ZW50IENTUkYgYXR0YWNrcyBieSByYWlzaW5nIGFuIGV4Y2VwdGlvbi4KICAgIyBGb3IgQVBJcywgeW91IG1heSB3YW50IHRvIHVzZSA6bnVsbF9zZXNzaW9uIGluc3RlYWQuCiAgIHByb3RlY3RfZnJvbV9mb3JnZXJ5IHdpdGg6IDpleGNlcHRpb24KLQotICBkZWYgaGVsbG8KLSAgICByZW5kZXIgdGV4dDogImhlbGxvIHdvcmxkIgotICBlbmQKLQorICBpbmNsdWRlIFNlc3Npb25zSGVscGVyCiBlbmRAQCAtMSw0ICsxLDggQEAKIGNsYXNzIFBhZ2VzQ29udHJvbGxlciA8IEFwcGxpY2F0aW9uQ29udHJvbGxlcgogICBkZWYgc2lnbnVwCiAgIGVuZAorICAKKyAgZGVmIGhvbWUKKyAgICBAdGl0bGUgPSAiSG9tZSIKKyAgZW5kCiBlbmRAQCAtMCwwICsxLDIzIEBACitjbGFzcyBTZXNzaW9uc0NvbnRyb2xsZXIgPCBBcHBsaWNhdGlvbkNvbnRyb2xsZXIKKyAgZGVmIG5ldworICAgIEB0aXRsZSA9ICJTaWduIGluIgorICBlbmQKKyAgCisgIGRlZiBjcmVhdGUKKworICAgIHVzZXIgPSBVc2VyLmZpbmRfYnkoZW1haWw6IHBhcmFtc1s6c2Vzc2lvbl1bOmVtYWlsXS5kb3duY2FzZSkKKyAgICBpZiB1c2VyICYmIHVzZXIuYXV0aGVudGljYXRlKHBhcmFtc1s6c2Vzc2lvbl1bOnBhc3N3b3JkXSkKKyAgICAgIGxvZ19pbiB1c2VyCisgICAgICByZWRpcmVjdF90byB1c2VyCisgICAgZWxzZQorICAgICAgIyBmbGFzaC5ub3cgYmVjYXVzZSB0aGUgInJlbmRlciAnbmV3JyIgZG9lcyBub3QgY291bnQgYXMgYSBHRVQtcmVxCisgICAgICBmbGFzaC5ub3dbOmRhbmdlcl0gPSAiTG9nIGluIGZhaWxlZCwgbWFrZSBzdXJlIHlvdSBzcGVsbGVkIGV2ZXJ5dGhpbmcgY29ycmVjdGx5LiIKKyAgICAgIHJlbmRlciAnbmV3JworICAgIGVuZAorICBlbmQKKyAgCisgIGRlZiBkZXN0cm95CisgICAgbG9nX291dAorICAgIHJlZGlyZWN0X3RvIHJvb3RfcGF0aAorICBlbmQKK2VuZEBAIC0xMSw2ICsxMSw3IEBAIGRlZiBuZXcKICAgZGVmIGNyZWF0ZQogICAgIEB1c2VyID0gVXNlci5uZXcodXNlcl9wYXJhbXMpCiAgICAgaWYgQHVzZXIuc2F2ZQorICAgICAgbG9nX2luIEB1c2VyCiAgICAgICBmbGFzaFs6c3VjY2Vzc10gPSAiTmV3IHVzZXIgY3JlYXRlZCIKICAgICAgIHJlZGlyZWN0X3RvIEB1c2VyCiAgICAgZWxzZUBAIC0wLDAgKzEsMTkgQEAKK21vZHVsZSBTZXNzaW9uc0hlbHBlcgorCisgIGRlZiBsb2dfaW4odXNlcikKKyAgICBzZXNzaW9uWzp1c2VyX2lkXSA9IHVzZXIuaWQKKyAgZW5kCisKKyAgZGVmIGN1cnJlbnRfdXNlcgorICAgIEBjdXJyZW50X3VzZXIgfHw9IFVzZXIuZmluZF9ieShpZDogc2Vzc2lvbls6dXNlcl9pZF0pCisgIGVuZAorICAKKyAgZGVmIGxvZ2dlZF9pbj8KKyAgICAhY3VycmVudF91c2VyLm5pbD8KKyAgZW5kCisgIAorICBkZWYgbG9nX291dAorICAgIHNlc3Npb24uZGVsZXRlKDp1c2VyX2lkKQorICAgIEBjdXJyZW50X3VzZXIgPSBuaWwKKyAgZW5kCitlbmRAQCAtMCwwICsxLDUgQEAKKyAgPGZvb3RlciBjbGFzcz0iZm9vdGVyIj4KKyAgICA8c21hbGw+CisgICAgICBDcmVhdGVkIGJ5IFNvbm55IEtqZWxsYmVyZworICAgIDwvc21hbGw+CisgIDwvZm9vdGVyPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMCwwICsxLDE2IEBACisgIDxoZWFkZXI+CisgICAgPGgxPmNvb2wgaGVhZGVyPC9oMT4KKyAgICA8JT0gbGlua190byAiV2ViYnJhbXZlcmsiLCByb290X3BhdGgsIGlkOiAibG9nbyIgJT4KKyAgICA8bmF2PgorICAgICAgPHVsIGNsYXNzPSJuYXZiYXIiPgorICAgICAgICA8bGk+PCU9IGxpbmtfdG8gIkhvbWUiLCAgIHJvb3RfcGF0aCAlPjwvbGk+CisgICAgICAgICAgPGxpPiA8JT0gbG9nZ2VkX2luPyAlPiA8L2xpPgorICAgICAgICA8JSBpZiBsb2dnZWRfaW4/ICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJBUEkta2V5cyIsIGN1cnJlbnRfdXNlciAlPjwvbGk+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgb3V0IiwgbG9nb3V0X3BhdGgsIG1ldGhvZDogImRlbGV0ZSIgJT48L2xpPgorICAgICAgICA8JSBlbHNlICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgaW4iLCBsb2dpbl9wYXRoICU+PC9saT4KKyAgICAgICAgPCUgZW5kICU+CisgICAgICA8L3VsPiAgICAgIAorICAgIDwvbmF2PgorICA8L2hlYWRlcj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTAsMCArMSw0IEBACis8IS0tW2lmIGx0IElFIDldPgorICA8c2NyaXB0IHNyYz0iLy9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvaHRtbDVzaGl2L3IyOS9odG1sNS5taW4uanMiPgorICA8L3NjcmlwdD4KKzwhW2VuZGlmXS0tPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwxNyArMSwyMCBAQAogPCFET0NUWVBFIGh0bWw+CiA8aHRtbD4KIDxoZWFkPgotICA8dGl0bGU+V29ya3NwYWNlPC90aXRsZT4KKyAgICA8dGl0bGU+PCU9IHlpZWxkKDp0aXRsZSkgJT48L3RpdGxlPgogICA8JT0gc3R5bGVzaGVldF9saW5rX3RhZyAgICAnYXBwbGljYXRpb24nLCBtZWRpYTogJ2FsbCcsICdkYXRhLXR1cmJvbGlua3MtdHJhY2snID0+IHRydWUgJT4KICAgPCU9IGphdmFzY3JpcHRfaW5jbHVkZV90YWcgJ2FwcGxpY2F0aW9uJywgJ2RhdGEtdHVyYm9saW5rcy10cmFjaycgPT4gdHJ1ZSAlPgogICA8JT0gY3NyZl9tZXRhX3RhZ3MgJT4KKyAgPCU9IHJlbmRlciAnbGF5b3V0cy9zaGltJyAlPgogPC9oZWFkPgogPGJvZHk+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvaGVhZGVyJyAlPgogICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPjwvZGl2PgogICA8JT0geWllbGQgJT4KICAgICA8JSBmbGFzaC5lYWNoIGRvIHxtZXNzYWdlX3R5cGUsIG1lc3NhZ2V8ICU+Ci0gICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtPCU9IG1lc3NhZ2VfdHlwZSAlPiI+PCU9IG1lc3NhZ2UgJT48L2Rpdj4KKyAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LTwlPSBtZXNzYWdlX3R5cGUgJT4iPjwlPSBtZXNzYWdlICU+PC9kaXY+CiAgICAgPCUgZW5kICU+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvZm9vdGVyJyAlPgogICA8JT0gZGVidWcocGFyYW1zKSBpZiBSYWlscy5lbnYuZGV2ZWxvcG1lbnQ/ICU+CiA8L2JvZHk+CiA8L2h0bWw+QEAgLTAsMCArMSw1IEBACis8JSBwcm92aWRlKDp0aXRsZSwgIkhvbWUiKSAlPgorPGgyPldlbGNvbWU8L2gyPgorPHA+CisgICAgRG8gY29vbCBzdHVmZiwgcGxlYXNlLgorPC9wPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwyICswLDAgQEAKLTxoMT5QYWdlcyNzaWdudXA8L2gxPgotPHA+RmluZCBtZSBpbiBhcHAvdmlld3MvcGFnZXMvc2lnbnVwLmh0bWwuZXJiPC9wPkBAIC0wLDAgKzEsMTQgQEAKKzxkaXYgY2xhc3M9ImZvcm0gbG9naW4iPgorICA8JT0gZm9ybV9mb3IoOnNlc3Npb24sIHVybDogbG9naW5fcGF0aCkgZG8gfGZ8ICU+CisKKyAgICA8JT0gZi5sYWJlbCA6ZW1haWwgJT4KKyAgICA8JT0gZi5lbWFpbF9maWVsZCA6ZW1haWwgJT4KKworICAgIDwlPSBmLmxhYmVsIDpwYXNzd29yZCAlPgorICAgIDwlPSBmLnBhc3N3b3JkX2ZpZWxkIDpwYXNzd29yZCAlPgorCisgICAgPCU9IGYuc3VibWl0ICJMb2cgaW4iICU+CisgIDwlIGVuZCAlPgorCisgIDxwPm9yIDwlPSBsaW5rX3RvICJTaWduIHVwIiwgc2lnbnVwX3BhdGggJT48L3A+Cis8L2Rpdj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTEsOSArMSwxNCBAQAogUmFpbHMuYXBwbGljYXRpb24ucm91dGVzLmRyYXcgZG8KICAgCi0gIHJvb3QgJ2FwcGxpY2F0aW9uI2hlbGxvJwotICBnZXQgJ3BhZ2VzL3NpZ251cCcKLSAgZ2V0ICd1c2Vycy9uZXcnCi0gIGdldCAnc2lnbnVwJyA9PiAndXNlcnMjbmV3JworICByb290ICAgICAgICAgICAgICAgICAgICAncGFnZXMjaG9tZScKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3BhZ2VzL3NpZ251cCcKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3VzZXJzL25ldycKKyAgZ2V0ICAgICAgICdzaWdudXAnICA9PiAgJ3VzZXJzI25ldycKKyAgZ2V0ICAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI25ldycKKyAgcG9zdCAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI2NyZWF0ZScKKyAgZGVsZXRlICAgICdsb2dvdXQnICA9PiAgJ3Nlc3Npb25zI2Rlc3Ryb3knCisgIAorICAKICAgcmVzb3VyY2VzIDp1c2VycwogICAKICAgQEAgLTAsMCArMSw5IEBACityZXF1aXJlICd0ZXN0X2hlbHBlcicKKworY2xhc3MgU2Vzc2lvbnNDb250cm9sbGVyVGVzdCA8IEFjdGlvbkNvbnRyb2xsZXI6OlRlc3RDYXNlCisgIHRlc3QgInNob3VsZCBnZXQgbmV3IiBkbworICAgIGdldCA6bmV3CisgICAgYXNzZXJ0X3Jlc3BvbnNlIDpzdWNjZXNzCisgIGVuZAorCitlbmQ="
    },
    {
        "repo": "webbramverk",
        "owner": "sk222sw",
        "timestamp": "2016-02-24T14:33:10Z",
        "message": "herokuy",
        "committer": "sk222sw",
        "filename": "test/controllers/sessions_controller_test.rb",
        "code": "QEAgLTAsMCArMSwzIEBACisjIFBsYWNlIGFsbCB0aGUgYmVoYXZpb3JzIGFuZCBob29rcyByZWxhdGVkIHRvIHRoZSBtYXRjaGluZyBjb250cm9sbGVyIGhlcmUuCisjIEFsbCB0aGlzIGxvZ2ljIHdpbGwgYXV0b21hdGljYWxseSBiZSBhdmFpbGFibGUgaW4gYXBwbGljYXRpb24uanMuCisjIFlvdSBjYW4gdXNlIENvZmZlZVNjcmlwdCBpbiB0aGlzIGZpbGU6IGh0dHA6Ly9jb2ZmZWVzY3JpcHQub3JnL3VuZGVmaW5lZEBAIC0wLDAgKzEsMyBAQAorLy8gUGxhY2UgYWxsIHRoZSBzdHlsZXMgcmVsYXRlZCB0byB0aGUgU2Vzc2lvbnMgY29udHJvbGxlciBoZXJlLgorLy8gVGhleSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgaW5jbHVkZWQgaW4gYXBwbGljYXRpb24uY3NzLgorLy8gWW91IGNhbiB1c2UgU2FzcyAoU0NTUykgaGVyZTogaHR0cDovL3Nhc3MtbGFuZy5jb20vQEAgLTIsOSArMiw1IEBAIGNsYXNzIEFwcGxpY2F0aW9uQ29udHJvbGxlciA8IEFjdGlvbkNvbnRyb2xsZXI6OkJhc2UKICAgIyBQcmV2ZW50IENTUkYgYXR0YWNrcyBieSByYWlzaW5nIGFuIGV4Y2VwdGlvbi4KICAgIyBGb3IgQVBJcywgeW91IG1heSB3YW50IHRvIHVzZSA6bnVsbF9zZXNzaW9uIGluc3RlYWQuCiAgIHByb3RlY3RfZnJvbV9mb3JnZXJ5IHdpdGg6IDpleGNlcHRpb24KLQotICBkZWYgaGVsbG8KLSAgICByZW5kZXIgdGV4dDogImhlbGxvIHdvcmxkIgotICBlbmQKLQorICBpbmNsdWRlIFNlc3Npb25zSGVscGVyCiBlbmRAQCAtMSw0ICsxLDggQEAKIGNsYXNzIFBhZ2VzQ29udHJvbGxlciA8IEFwcGxpY2F0aW9uQ29udHJvbGxlcgogICBkZWYgc2lnbnVwCiAgIGVuZAorICAKKyAgZGVmIGhvbWUKKyAgICBAdGl0bGUgPSAiSG9tZSIKKyAgZW5kCiBlbmRAQCAtMCwwICsxLDIzIEBACitjbGFzcyBTZXNzaW9uc0NvbnRyb2xsZXIgPCBBcHBsaWNhdGlvbkNvbnRyb2xsZXIKKyAgZGVmIG5ldworICAgIEB0aXRsZSA9ICJTaWduIGluIgorICBlbmQKKyAgCisgIGRlZiBjcmVhdGUKKworICAgIHVzZXIgPSBVc2VyLmZpbmRfYnkoZW1haWw6IHBhcmFtc1s6c2Vzc2lvbl1bOmVtYWlsXS5kb3duY2FzZSkKKyAgICBpZiB1c2VyICYmIHVzZXIuYXV0aGVudGljYXRlKHBhcmFtc1s6c2Vzc2lvbl1bOnBhc3N3b3JkXSkKKyAgICAgIGxvZ19pbiB1c2VyCisgICAgICByZWRpcmVjdF90byB1c2VyCisgICAgZWxzZQorICAgICAgIyBmbGFzaC5ub3cgYmVjYXVzZSB0aGUgInJlbmRlciAnbmV3JyIgZG9lcyBub3QgY291bnQgYXMgYSBHRVQtcmVxCisgICAgICBmbGFzaC5ub3dbOmRhbmdlcl0gPSAiTG9nIGluIGZhaWxlZCwgbWFrZSBzdXJlIHlvdSBzcGVsbGVkIGV2ZXJ5dGhpbmcgY29ycmVjdGx5LiIKKyAgICAgIHJlbmRlciAnbmV3JworICAgIGVuZAorICBlbmQKKyAgCisgIGRlZiBkZXN0cm95CisgICAgbG9nX291dAorICAgIHJlZGlyZWN0X3RvIHJvb3RfcGF0aAorICBlbmQKK2VuZEBAIC0xMSw2ICsxMSw3IEBAIGRlZiBuZXcKICAgZGVmIGNyZWF0ZQogICAgIEB1c2VyID0gVXNlci5uZXcodXNlcl9wYXJhbXMpCiAgICAgaWYgQHVzZXIuc2F2ZQorICAgICAgbG9nX2luIEB1c2VyCiAgICAgICBmbGFzaFs6c3VjY2Vzc10gPSAiTmV3IHVzZXIgY3JlYXRlZCIKICAgICAgIHJlZGlyZWN0X3RvIEB1c2VyCiAgICAgZWxzZUBAIC0wLDAgKzEsMTkgQEAKK21vZHVsZSBTZXNzaW9uc0hlbHBlcgorCisgIGRlZiBsb2dfaW4odXNlcikKKyAgICBzZXNzaW9uWzp1c2VyX2lkXSA9IHVzZXIuaWQKKyAgZW5kCisKKyAgZGVmIGN1cnJlbnRfdXNlcgorICAgIEBjdXJyZW50X3VzZXIgfHw9IFVzZXIuZmluZF9ieShpZDogc2Vzc2lvbls6dXNlcl9pZF0pCisgIGVuZAorICAKKyAgZGVmIGxvZ2dlZF9pbj8KKyAgICAhY3VycmVudF91c2VyLm5pbD8KKyAgZW5kCisgIAorICBkZWYgbG9nX291dAorICAgIHNlc3Npb24uZGVsZXRlKDp1c2VyX2lkKQorICAgIEBjdXJyZW50X3VzZXIgPSBuaWwKKyAgZW5kCitlbmRAQCAtMCwwICsxLDUgQEAKKyAgPGZvb3RlciBjbGFzcz0iZm9vdGVyIj4KKyAgICA8c21hbGw+CisgICAgICBDcmVhdGVkIGJ5IFNvbm55IEtqZWxsYmVyZworICAgIDwvc21hbGw+CisgIDwvZm9vdGVyPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMCwwICsxLDE2IEBACisgIDxoZWFkZXI+CisgICAgPGgxPmNvb2wgaGVhZGVyPC9oMT4KKyAgICA8JT0gbGlua190byAiV2ViYnJhbXZlcmsiLCByb290X3BhdGgsIGlkOiAibG9nbyIgJT4KKyAgICA8bmF2PgorICAgICAgPHVsIGNsYXNzPSJuYXZiYXIiPgorICAgICAgICA8bGk+PCU9IGxpbmtfdG8gIkhvbWUiLCAgIHJvb3RfcGF0aCAlPjwvbGk+CisgICAgICAgICAgPGxpPiA8JT0gbG9nZ2VkX2luPyAlPiA8L2xpPgorICAgICAgICA8JSBpZiBsb2dnZWRfaW4/ICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJBUEkta2V5cyIsIGN1cnJlbnRfdXNlciAlPjwvbGk+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgb3V0IiwgbG9nb3V0X3BhdGgsIG1ldGhvZDogImRlbGV0ZSIgJT48L2xpPgorICAgICAgICA8JSBlbHNlICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgaW4iLCBsb2dpbl9wYXRoICU+PC9saT4KKyAgICAgICAgPCUgZW5kICU+CisgICAgICA8L3VsPiAgICAgIAorICAgIDwvbmF2PgorICA8L2hlYWRlcj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTAsMCArMSw0IEBACis8IS0tW2lmIGx0IElFIDldPgorICA8c2NyaXB0IHNyYz0iLy9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvaHRtbDVzaGl2L3IyOS9odG1sNS5taW4uanMiPgorICA8L3NjcmlwdD4KKzwhW2VuZGlmXS0tPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwxNyArMSwyMCBAQAogPCFET0NUWVBFIGh0bWw+CiA8aHRtbD4KIDxoZWFkPgotICA8dGl0bGU+V29ya3NwYWNlPC90aXRsZT4KKyAgICA8dGl0bGU+PCU9IHlpZWxkKDp0aXRsZSkgJT48L3RpdGxlPgogICA8JT0gc3R5bGVzaGVldF9saW5rX3RhZyAgICAnYXBwbGljYXRpb24nLCBtZWRpYTogJ2FsbCcsICdkYXRhLXR1cmJvbGlua3MtdHJhY2snID0+IHRydWUgJT4KICAgPCU9IGphdmFzY3JpcHRfaW5jbHVkZV90YWcgJ2FwcGxpY2F0aW9uJywgJ2RhdGEtdHVyYm9saW5rcy10cmFjaycgPT4gdHJ1ZSAlPgogICA8JT0gY3NyZl9tZXRhX3RhZ3MgJT4KKyAgPCU9IHJlbmRlciAnbGF5b3V0cy9zaGltJyAlPgogPC9oZWFkPgogPGJvZHk+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvaGVhZGVyJyAlPgogICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPjwvZGl2PgogICA8JT0geWllbGQgJT4KICAgICA8JSBmbGFzaC5lYWNoIGRvIHxtZXNzYWdlX3R5cGUsIG1lc3NhZ2V8ICU+Ci0gICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtPCU9IG1lc3NhZ2VfdHlwZSAlPiI+PCU9IG1lc3NhZ2UgJT48L2Rpdj4KKyAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LTwlPSBtZXNzYWdlX3R5cGUgJT4iPjwlPSBtZXNzYWdlICU+PC9kaXY+CiAgICAgPCUgZW5kICU+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvZm9vdGVyJyAlPgogICA8JT0gZGVidWcocGFyYW1zKSBpZiBSYWlscy5lbnYuZGV2ZWxvcG1lbnQ/ICU+CiA8L2JvZHk+CiA8L2h0bWw+QEAgLTAsMCArMSw1IEBACis8JSBwcm92aWRlKDp0aXRsZSwgIkhvbWUiKSAlPgorPGgyPldlbGNvbWU8L2gyPgorPHA+CisgICAgRG8gY29vbCBzdHVmZiwgcGxlYXNlLgorPC9wPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwyICswLDAgQEAKLTxoMT5QYWdlcyNzaWdudXA8L2gxPgotPHA+RmluZCBtZSBpbiBhcHAvdmlld3MvcGFnZXMvc2lnbnVwLmh0bWwuZXJiPC9wPkBAIC0wLDAgKzEsMTQgQEAKKzxkaXYgY2xhc3M9ImZvcm0gbG9naW4iPgorICA8JT0gZm9ybV9mb3IoOnNlc3Npb24sIHVybDogbG9naW5fcGF0aCkgZG8gfGZ8ICU+CisKKyAgICA8JT0gZi5sYWJlbCA6ZW1haWwgJT4KKyAgICA8JT0gZi5lbWFpbF9maWVsZCA6ZW1haWwgJT4KKworICAgIDwlPSBmLmxhYmVsIDpwYXNzd29yZCAlPgorICAgIDwlPSBmLnBhc3N3b3JkX2ZpZWxkIDpwYXNzd29yZCAlPgorCisgICAgPCU9IGYuc3VibWl0ICJMb2cgaW4iICU+CisgIDwlIGVuZCAlPgorCisgIDxwPm9yIDwlPSBsaW5rX3RvICJTaWduIHVwIiwgc2lnbnVwX3BhdGggJT48L3A+Cis8L2Rpdj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTEsOSArMSwxNCBAQAogUmFpbHMuYXBwbGljYXRpb24ucm91dGVzLmRyYXcgZG8KICAgCi0gIHJvb3QgJ2FwcGxpY2F0aW9uI2hlbGxvJwotICBnZXQgJ3BhZ2VzL3NpZ251cCcKLSAgZ2V0ICd1c2Vycy9uZXcnCi0gIGdldCAnc2lnbnVwJyA9PiAndXNlcnMjbmV3JworICByb290ICAgICAgICAgICAgICAgICAgICAncGFnZXMjaG9tZScKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3BhZ2VzL3NpZ251cCcKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3VzZXJzL25ldycKKyAgZ2V0ICAgICAgICdzaWdudXAnICA9PiAgJ3VzZXJzI25ldycKKyAgZ2V0ICAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI25ldycKKyAgcG9zdCAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI2NyZWF0ZScKKyAgZGVsZXRlICAgICdsb2dvdXQnICA9PiAgJ3Nlc3Npb25zI2Rlc3Ryb3knCisgIAorICAKICAgcmVzb3VyY2VzIDp1c2VycwogICAKICAgQEAgLTAsMCArMSw5IEBACityZXF1aXJlICd0ZXN0X2hlbHBlcicKKworY2xhc3MgU2Vzc2lvbnNDb250cm9sbGVyVGVzdCA8IEFjdGlvbkNvbnRyb2xsZXI6OlRlc3RDYXNlCisgIHRlc3QgInNob3VsZCBnZXQgbmV3IiBkbworICAgIGdldCA6bmV3CisgICAgYXNzZXJ0X3Jlc3BvbnNlIDpzdWNjZXNzCisgIGVuZAorCitlbmQ="
    },
    {
        "repo": "webbramverk",
        "owner": "sk222sw",
        "timestamp": "2016-02-24T14:26:16Z",
        "message": "first commit",
        "committer": "sk222sw",
        "filename": "test/controllers/sessions_controller_test.rb",
        "code": "QEAgLTAsMCArMSwzIEBACisjIFBsYWNlIGFsbCB0aGUgYmVoYXZpb3JzIGFuZCBob29rcyByZWxhdGVkIHRvIHRoZSBtYXRjaGluZyBjb250cm9sbGVyIGhlcmUuCisjIEFsbCB0aGlzIGxvZ2ljIHdpbGwgYXV0b21hdGljYWxseSBiZSBhdmFpbGFibGUgaW4gYXBwbGljYXRpb24uanMuCisjIFlvdSBjYW4gdXNlIENvZmZlZVNjcmlwdCBpbiB0aGlzIGZpbGU6IGh0dHA6Ly9jb2ZmZWVzY3JpcHQub3JnL3VuZGVmaW5lZEBAIC0wLDAgKzEsMyBAQAorLy8gUGxhY2UgYWxsIHRoZSBzdHlsZXMgcmVsYXRlZCB0byB0aGUgU2Vzc2lvbnMgY29udHJvbGxlciBoZXJlLgorLy8gVGhleSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgaW5jbHVkZWQgaW4gYXBwbGljYXRpb24uY3NzLgorLy8gWW91IGNhbiB1c2UgU2FzcyAoU0NTUykgaGVyZTogaHR0cDovL3Nhc3MtbGFuZy5jb20vQEAgLTIsOSArMiw1IEBAIGNsYXNzIEFwcGxpY2F0aW9uQ29udHJvbGxlciA8IEFjdGlvbkNvbnRyb2xsZXI6OkJhc2UKICAgIyBQcmV2ZW50IENTUkYgYXR0YWNrcyBieSByYWlzaW5nIGFuIGV4Y2VwdGlvbi4KICAgIyBGb3IgQVBJcywgeW91IG1heSB3YW50IHRvIHVzZSA6bnVsbF9zZXNzaW9uIGluc3RlYWQuCiAgIHByb3RlY3RfZnJvbV9mb3JnZXJ5IHdpdGg6IDpleGNlcHRpb24KLQotICBkZWYgaGVsbG8KLSAgICByZW5kZXIgdGV4dDogImhlbGxvIHdvcmxkIgotICBlbmQKLQorICBpbmNsdWRlIFNlc3Npb25zSGVscGVyCiBlbmRAQCAtMSw0ICsxLDggQEAKIGNsYXNzIFBhZ2VzQ29udHJvbGxlciA8IEFwcGxpY2F0aW9uQ29udHJvbGxlcgogICBkZWYgc2lnbnVwCiAgIGVuZAorICAKKyAgZGVmIGhvbWUKKyAgICBAdGl0bGUgPSAiSG9tZSIKKyAgZW5kCiBlbmRAQCAtMCwwICsxLDIzIEBACitjbGFzcyBTZXNzaW9uc0NvbnRyb2xsZXIgPCBBcHBsaWNhdGlvbkNvbnRyb2xsZXIKKyAgZGVmIG5ldworICAgIEB0aXRsZSA9ICJTaWduIGluIgorICBlbmQKKyAgCisgIGRlZiBjcmVhdGUKKworICAgIHVzZXIgPSBVc2VyLmZpbmRfYnkoZW1haWw6IHBhcmFtc1s6c2Vzc2lvbl1bOmVtYWlsXS5kb3duY2FzZSkKKyAgICBpZiB1c2VyICYmIHVzZXIuYXV0aGVudGljYXRlKHBhcmFtc1s6c2Vzc2lvbl1bOnBhc3N3b3JkXSkKKyAgICAgIGxvZ19pbiB1c2VyCisgICAgICByZWRpcmVjdF90byB1c2VyCisgICAgZWxzZQorICAgICAgIyBmbGFzaC5ub3cgYmVjYXVzZSB0aGUgInJlbmRlciAnbmV3JyIgZG9lcyBub3QgY291bnQgYXMgYSBHRVQtcmVxCisgICAgICBmbGFzaC5ub3dbOmRhbmdlcl0gPSAiTG9nIGluIGZhaWxlZCwgbWFrZSBzdXJlIHlvdSBzcGVsbGVkIGV2ZXJ5dGhpbmcgY29ycmVjdGx5LiIKKyAgICAgIHJlbmRlciAnbmV3JworICAgIGVuZAorICBlbmQKKyAgCisgIGRlZiBkZXN0cm95CisgICAgbG9nX291dAorICAgIHJlZGlyZWN0X3RvIHJvb3RfcGF0aAorICBlbmQKK2VuZEBAIC0xMSw2ICsxMSw3IEBAIGRlZiBuZXcKICAgZGVmIGNyZWF0ZQogICAgIEB1c2VyID0gVXNlci5uZXcodXNlcl9wYXJhbXMpCiAgICAgaWYgQHVzZXIuc2F2ZQorICAgICAgbG9nX2luIEB1c2VyCiAgICAgICBmbGFzaFs6c3VjY2Vzc10gPSAiTmV3IHVzZXIgY3JlYXRlZCIKICAgICAgIHJlZGlyZWN0X3RvIEB1c2VyCiAgICAgZWxzZUBAIC0wLDAgKzEsMTkgQEAKK21vZHVsZSBTZXNzaW9uc0hlbHBlcgorCisgIGRlZiBsb2dfaW4odXNlcikKKyAgICBzZXNzaW9uWzp1c2VyX2lkXSA9IHVzZXIuaWQKKyAgZW5kCisKKyAgZGVmIGN1cnJlbnRfdXNlcgorICAgIEBjdXJyZW50X3VzZXIgfHw9IFVzZXIuZmluZF9ieShpZDogc2Vzc2lvbls6dXNlcl9pZF0pCisgIGVuZAorICAKKyAgZGVmIGxvZ2dlZF9pbj8KKyAgICAhY3VycmVudF91c2VyLm5pbD8KKyAgZW5kCisgIAorICBkZWYgbG9nX291dAorICAgIHNlc3Npb24uZGVsZXRlKDp1c2VyX2lkKQorICAgIEBjdXJyZW50X3VzZXIgPSBuaWwKKyAgZW5kCitlbmRAQCAtMCwwICsxLDUgQEAKKyAgPGZvb3RlciBjbGFzcz0iZm9vdGVyIj4KKyAgICA8c21hbGw+CisgICAgICBDcmVhdGVkIGJ5IFNvbm55IEtqZWxsYmVyZworICAgIDwvc21hbGw+CisgIDwvZm9vdGVyPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMCwwICsxLDE2IEBACisgIDxoZWFkZXI+CisgICAgPGgxPmNvb2wgaGVhZGVyPC9oMT4KKyAgICA8JT0gbGlua190byAiV2ViYnJhbXZlcmsiLCByb290X3BhdGgsIGlkOiAibG9nbyIgJT4KKyAgICA8bmF2PgorICAgICAgPHVsIGNsYXNzPSJuYXZiYXIiPgorICAgICAgICA8bGk+PCU9IGxpbmtfdG8gIkhvbWUiLCAgIHJvb3RfcGF0aCAlPjwvbGk+CisgICAgICAgICAgPGxpPiA8JT0gbG9nZ2VkX2luPyAlPiA8L2xpPgorICAgICAgICA8JSBpZiBsb2dnZWRfaW4/ICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJBUEkta2V5cyIsIGN1cnJlbnRfdXNlciAlPjwvbGk+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgb3V0IiwgbG9nb3V0X3BhdGgsIG1ldGhvZDogImRlbGV0ZSIgJT48L2xpPgorICAgICAgICA8JSBlbHNlICU+CisgICAgICAgICAgPGxpPjwlPSBsaW5rX3RvICJMb2cgaW4iLCBsb2dpbl9wYXRoICU+PC9saT4KKyAgICAgICAgPCUgZW5kICU+CisgICAgICA8L3VsPiAgICAgIAorICAgIDwvbmF2PgorICA8L2hlYWRlcj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTAsMCArMSw0IEBACis8IS0tW2lmIGx0IElFIDldPgorICA8c2NyaXB0IHNyYz0iLy9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvaHRtbDVzaGl2L3IyOS9odG1sNS5taW4uanMiPgorICA8L3NjcmlwdD4KKzwhW2VuZGlmXS0tPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwxNyArMSwyMCBAQAogPCFET0NUWVBFIGh0bWw+CiA8aHRtbD4KIDxoZWFkPgotICA8dGl0bGU+V29ya3NwYWNlPC90aXRsZT4KKyAgICA8dGl0bGU+PCU9IHlpZWxkKDp0aXRsZSkgJT48L3RpdGxlPgogICA8JT0gc3R5bGVzaGVldF9saW5rX3RhZyAgICAnYXBwbGljYXRpb24nLCBtZWRpYTogJ2FsbCcsICdkYXRhLXR1cmJvbGlua3MtdHJhY2snID0+IHRydWUgJT4KICAgPCU9IGphdmFzY3JpcHRfaW5jbHVkZV90YWcgJ2FwcGxpY2F0aW9uJywgJ2RhdGEtdHVyYm9saW5rcy10cmFjaycgPT4gdHJ1ZSAlPgogICA8JT0gY3NyZl9tZXRhX3RhZ3MgJT4KKyAgPCU9IHJlbmRlciAnbGF5b3V0cy9zaGltJyAlPgogPC9oZWFkPgogPGJvZHk+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvaGVhZGVyJyAlPgogICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPjwvZGl2PgogICA8JT0geWllbGQgJT4KICAgICA8JSBmbGFzaC5lYWNoIGRvIHxtZXNzYWdlX3R5cGUsIG1lc3NhZ2V8ICU+Ci0gICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtPCU9IG1lc3NhZ2VfdHlwZSAlPiI+PCU9IG1lc3NhZ2UgJT48L2Rpdj4KKyAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LTwlPSBtZXNzYWdlX3R5cGUgJT4iPjwlPSBtZXNzYWdlICU+PC9kaXY+CiAgICAgPCUgZW5kICU+CisgIDwlPSByZW5kZXIgJ2xheW91dHMvZm9vdGVyJyAlPgogICA8JT0gZGVidWcocGFyYW1zKSBpZiBSYWlscy5lbnYuZGV2ZWxvcG1lbnQ/ICU+CiA8L2JvZHk+CiA8L2h0bWw+QEAgLTAsMCArMSw1IEBACis8JSBwcm92aWRlKDp0aXRsZSwgIkhvbWUiKSAlPgorPGgyPldlbGNvbWU8L2gyPgorPHA+CisgICAgRG8gY29vbCBzdHVmZiwgcGxlYXNlLgorPC9wPgpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwyICswLDAgQEAKLTxoMT5QYWdlcyNzaWdudXA8L2gxPgotPHA+RmluZCBtZSBpbiBhcHAvdmlld3MvcGFnZXMvc2lnbnVwLmh0bWwuZXJiPC9wPkBAIC0wLDAgKzEsMTQgQEAKKzxkaXYgY2xhc3M9ImZvcm0gbG9naW4iPgorICA8JT0gZm9ybV9mb3IoOnNlc3Npb24sIHVybDogbG9naW5fcGF0aCkgZG8gfGZ8ICU+CisKKyAgICA8JT0gZi5sYWJlbCA6ZW1haWwgJT4KKyAgICA8JT0gZi5lbWFpbF9maWVsZCA6ZW1haWwgJT4KKworICAgIDwlPSBmLmxhYmVsIDpwYXNzd29yZCAlPgorICAgIDwlPSBmLnBhc3N3b3JkX2ZpZWxkIDpwYXNzd29yZCAlPgorCisgICAgPCU9IGYuc3VibWl0ICJMb2cgaW4iICU+CisgIDwlIGVuZCAlPgorCisgIDxwPm9yIDwlPSBsaW5rX3RvICJTaWduIHVwIiwgc2lnbnVwX3BhdGggJT48L3A+Cis8L2Rpdj4KXCBObyBuZXdsaW5lIGF0IGVuZCBvZiBmaWxlQEAgLTEsOSArMSwxNCBAQAogUmFpbHMuYXBwbGljYXRpb24ucm91dGVzLmRyYXcgZG8KICAgCi0gIHJvb3QgJ2FwcGxpY2F0aW9uI2hlbGxvJwotICBnZXQgJ3BhZ2VzL3NpZ251cCcKLSAgZ2V0ICd1c2Vycy9uZXcnCi0gIGdldCAnc2lnbnVwJyA9PiAndXNlcnMjbmV3JworICByb290ICAgICAgICAgICAgICAgICAgICAncGFnZXMjaG9tZScKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3BhZ2VzL3NpZ251cCcKKyAgZ2V0ICAgICAgICAgICAgICAgICAgICAgJ3VzZXJzL25ldycKKyAgZ2V0ICAgICAgICdzaWdudXAnICA9PiAgJ3VzZXJzI25ldycKKyAgZ2V0ICAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI25ldycKKyAgcG9zdCAgICAgICdsb2dpbicgICA9PiAgJ3Nlc3Npb25zI2NyZWF0ZScKKyAgZGVsZXRlICAgICdsb2dvdXQnICA9PiAgJ3Nlc3Npb25zI2Rlc3Ryb3knCisgIAorICAKICAgcmVzb3VyY2VzIDp1c2VycwogICAKICAgQEAgLTAsMCArMSw5IEBACityZXF1aXJlICd0ZXN0X2hlbHBlcicKKworY2xhc3MgU2Vzc2lvbnNDb250cm9sbGVyVGVzdCA8IEFjdGlvbkNvbnRyb2xsZXI6OlRlc3RDYXNlCisgIHRlc3QgInNob3VsZCBnZXQgbmV3IiBkbworICAgIGdldCA6bmV3CisgICAgYXNzZXJ0X3Jlc3BvbnNlIDpzdWNjZXNzCisgIGVuZAorCitlbmQ="
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-03-15T13:31:53Z",
        "message": "postman file, readme update",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": "QEAgLTAsMCArMSwzMzAgQEAKK3sKKwkiaWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkibmFtZSI6ICJBcGkgdGVzdGVyIiwKKwkiZGVzY3JpcHRpb24iOiAiIiwKKwkib3JkZXIiOiBbCisJCSJlYjYyZDIyYS02ZDJkLTMxMjctNjEzNC1lZDE1NWQ1YTk5ZTUiLAorCQkiNDIzN2ZlZmUtZjc1Yi0yZTBhLWNhYjktMzU1YTIwNzE0ODcyIiwKKwkJIjRiYTUzNzhhLTI4ODQtMDRkMi05MjJmLWVlYmNlNGZmMTg3MiIsCisJCSI5YzBhMTAwMS02ODhlLThlMzktYjRkOC00YmYwZjJlMGJkMjkiLAorCQkiNjFkYmQ5NGQtMWYzNC1kOGU5LWFkMWMtOGU4MjAwNGE1ZmNhIiwKKwkJImQzYjk1MDZlLTg2NTEtZmJiYy1hMDg5LWU0ODQxYTc5YjFhNSIsCisJCSI0YjBhYWY1Ny05OTNlLWY5YWEtYmI5OS1lYTY5MzZiNTk3NzUiLAorCQkiZmRmOGRhZjctNzQ2NS1hMzNhLTY3YmYtYjIyYzEzNzJlOTljIiwKKwkJImRiYjYxMGY4LTdmZDAtYjhkOS0yYmZlLWM1MzFhNDVhYjBlYyIsCisJCSI2OGExZDI3Ni04OWU2LTNiODMtMDRhMy1iMjA1NDYzYWE4NGEiLAorCQkiZGNhOWJmYjQtMDgwOC1iZGM0LTllZDYtMjljNGZlYjhkYTkyIiwKKwkJImMxMzRiZDFmLTUyNzktMzZjZS04MzM5LTEwNWY2MTU1ZTZhMiIsCisJCSJlYzFjZjMyMC0yY2IwLWIzNGMtNDdjMS0yOTBhZGUwZWZhZWEiLAorCQkiMTkxNWI4YTAtOWVkZC1mYWYzLTQ5NTEtMmUzODc3NmQ0MDVmIiwKKwkJIjRiZjNjZTY0LWI2NDYtZmQ0MC02M2E1LWRhMjlhNjNhYTFiYSIKKwldLAorCSJmb2xkZXJzIjogW10sCisJInRpbWVzdGFtcCI6IDE0NTc2MDAxNzc0OTUsCisJIm93bmVyIjogMCwKKwkicmVtb3RlTGluayI6ICIiLAorCSJwdWJsaWMiOiBmYWxzZSwKKwkicmVxdWVzdHMiOiBbCisJCXsKKwkJCSJpZCI6ICIxOTE1YjhhMC05ZWRkLWZhZjMtNDk1MS0yZTM4Nzc2ZDQwNWYiLAorCQkJImhlYWRlcnMiOiAiWC1BcGkta2V5OiAzMGY2MzIwZjY4ZDk0ZDU5ODdmMDI1ZWQ2ZjY0NmFhM1xuQXV0aG9yaXphdGlvbjogQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVelV4TWlKOS5leUpsYm1SZmRYTmxjbDlwWkNJNk9Td2laWGh3YVhKaGRHbHZiaUk2TVRRMU9EQTFORE16T1gwLkF5dDJhekZhaXYtTlBwLU5RUEY4ekNHTkpnOUFackNfM2d6eFNvXzNfSHpmMS1aTnJ6SzdmaTZ3eGxPdktHOU1DcGxRamlsTDRXUy1ycDdLUExlcWdBXG4iLAorCQkJInVybCI6ICJodHRwczovL2xpdC1yaXZlci05MjI4NS5oZXJva3VhcHAuY29tL2FwaS90YWdzLzEiLAorCQkJInBhdGhWYXJpYWJsZXMiOiB7fSwKKwkJCSJwcmVSZXF1ZXN0U2NyaXB0IjogbnVsbCwKKwkJCSJtZXRob2QiOiAiR0VUIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJkYXRhIjogbnVsbCwKKwkJCSJkYXRhTW9kZSI6ICJwYXJhbXMiLAorCQkJIm5hbWUiOiAibGlzdCBzaW5nbGUgdGFnIiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ4NDEzNjc5LAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9CisJCX0sCisJCXsKKwkJCSJpZCI6ICI0MjM3ZmVmZS1mNzViLTJlMGEtY2FiOS0zNTVhMjA3MTQ4NzIiLAorCQkJImhlYWRlcnMiOiAiWC1BcGkta2V5OiAzMGY2MzIwZjY4ZDk0ZDU5ODdmMDI1ZWQ2ZjY0NmFhM1xuQXV0aG9yaXphdGlvbjogQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVelV4TWlKOS5leUpsYm1SZmRYTmxjbDlwWkNJNk9Td2laWGh3YVhKaGRHbHZiaUk2TVRRMU9EQTFORE16T1gwLkF5dDJhekZhaXYtTlBwLU5RUEY4ekNHTkpnOUFackNfM2d6eFNvXzNfSHpmMS1aTnJ6SzdmaTZ3eGxPdktHOU1DcGxRamlsTDRXUy1ycDdLUExlcWdBXG4iLAorCQkJInVybCI6ICJodHRwczovL2xpdC1yaXZlci05MjI4NS5oZXJva3VhcHAuY29tL2FwaS9ldmVudHMiLAorCQkJInBhdGhWYXJpYWJsZXMiOiB7fSwKKwkJCSJwcmVSZXF1ZXN0U2NyaXB0IjogbnVsbCwKKwkJCSJtZXRob2QiOiAiR0VUIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJkYXRhIjogbnVsbCwKKwkJCSJkYXRhTW9kZSI6ICJwYXJhbXMiLAorCQkJIm5hbWUiOiAiZ2V0IGFsbCBldmVudHMgYXMgYXV0aG9yaXplZCB1c2VyIiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ3MzE0NjI3LAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9CisJCX0sCisJCXsKKwkJCSJpZCI6ICI0YjBhYWY1Ny05OTNlLWY5YWEtYmI5OS1lYTY5MzZiNTk3NzUiLAorCQkJImhlYWRlcnMiOiAiWC1BcGkta2V5OiAzMGY2MzIwZjY4ZDk0ZDU5ODdmMDI1ZWQ2ZjY0NmFhM1xuQXV0aG9yaXphdGlvbjogQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVelV4TWlKOS5leUpsYm1SZmRYTmxjbDlwWkNJNk9Td2laWGh3YVhKaGRHbHZiaUk2TVRRMU9EQTFORE16T1gwLkF5dDJhekZhaXYtTlBwLU5RUEY4ekNHTkpnOUFackNfM2d6eFNvXzNfSHpmMS1aTnJ6SzdmaTZ3eGxPdktHOU1DcGxRamlsTDRXUy1ycDdLUExlcWdBXG4iLAorCQkJInVybCI6ICJodHRwczovL2xpdC1yaXZlci05MjI4NS5oZXJva3VhcHAuY29tL2FwaS9ldmVudHM/c2VhcmNoPXBhciIsCisJCQkicGF0aFZhcmlhYmxlcyI6IHt9LAorCQkJInByZVJlcXVlc3RTY3JpcHQiOiBudWxsLAorCQkJIm1ldGhvZCI6ICJHRVQiLAorCQkJImNvbGxlY3Rpb25JZCI6ICI5NWY3MWI2OS1jNjVmLWZiZmMtNGRhOS0yNTFlYTg0NmNkZTUiLAorCQkJImRhdGEiOiBudWxsLAorCQkJImRhdGFNb2RlIjogInBhcmFtcyIsCisJCQkibmFtZSI6ICJzZWFyY2ggZXZlbnRzIiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ3ODk0OTcwLAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9CisJCX0sCisJCXsKKwkJCSJpZCI6ICI0YmE1Mzc4YS0yODg0LTA0ZDItOTIyZi1lZWJjZTRmZjE4NzIiLAorCQkJImhlYWRlcnMiOiAiWC1BcGkta2V5OiAzMGY2MzIwZjY4ZDk0ZDU5ODdmMDI1ZWQ2ZjY0NmFhM1xuIiwKKwkJCSJ1cmwiOiAiaHR0cHM6Ly9saXQtcml2ZXItOTIyODUuaGVyb2t1YXBwLmNvbS9hcGkvZXZlbnRzIiwKKwkJCSJwYXRoVmFyaWFibGVzIjoge30sCisJCQkicHJlUmVxdWVzdFNjcmlwdCI6IG51bGwsCisJCQkibWV0aG9kIjogIkdFVCIsCisJCQkiY29sbGVjdGlvbklkIjogIjk1ZjcxYjY5LWM2NWYtZmJmYy00ZGE5LTI1MWVhODQ2Y2RlNSIsCisJCQkiZGF0YSI6IG51bGwsCisJCQkiZGF0YU1vZGUiOiAicGFyYW1zIiwKKwkJCSJuYW1lIjogImdldCBhbGwgZXZlbnRzIGEgdW5hdXRob3JpemVkIHVzZXIiLAorCQkJImRlc2NyaXB0aW9uIjogIiIsCisJCQkiZGVzY3JpcHRpb25Gb3JtYXQiOiAiaHRtbCIsCisJCQkidGltZSI6IDE0NTgwNDczNzI4MTQsCisJCQkidmVyc2lvbiI6IDIsCisJCQkicmVzcG9uc2VzIjogW10sCisJCQkidGVzdHMiOiBudWxsLAorCQkJImN1cnJlbnRIZWxwZXIiOiAibm9ybWFsIiwKKwkJCSJoZWxwZXJBdHRyaWJ1dGVzIjoge30KKwkJfSwKKwkJeworCQkJImlkIjogIjRiZjNjZTY0LWI2NDYtZmQ0MC02M2E1LWRhMjlhNjNhYTFiYSIsCisJCQkiaGVhZGVycyI6ICJYLUFwaS1rZXk6IDMwZjYzMjBmNjhkOTRkNTk4N2YwMjVlZDZmNjQ2YWEzXG5BdXRob3JpemF0aW9uOiBCZWFyZXIgZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6VXhNaUo5LmV5SmxibVJmZFhObGNsOXBaQ0k2T1N3aVpYaHdhWEpoZEdsdmJpSTZNVFExT0RBMU5ETXpPWDAuQXl0MmF6RmFpdi1OUHAtTlFQRjh6Q0dOSmc5QVpyQ18zZ3p4U29fM19IemYxLVpOcnpLN2ZpNnd4bE92S0c5TUNwbFFqaWxMNFdTLXJwN0tQTGVxZ0FcbiIsCisJCQkidXJsIjogImh0dHBzOi8vbGl0LXJpdmVyLTkyMjg1Lmhlcm9rdWFwcC5jb20vYXBpL3RhZ3MvMS9ldmVudHMiLAorCQkJInBhdGhWYXJpYWJsZXMiOiB7fSwKKwkJCSJwcmVSZXF1ZXN0U2NyaXB0IjogbnVsbCwKKwkJCSJtZXRob2QiOiAiR0VUIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJkYXRhIjogbnVsbCwKKwkJCSJkYXRhTW9kZSI6ICJwYXJhbXMiLAorCQkJIm5hbWUiOiAibGlzdCBhIHRhZ3MgZXZlbnRzIiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ4NDYyOTMzLAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9CisJCX0sCisJCXsKKwkJCSJpZCI6ICI2MWRiZDk0ZC0xZjM0LWQ4ZTktYWQxYy04ZTgyMDA0YTVmY2EiLAorCQkJImhlYWRlcnMiOiAiWC1BcGkta2V5OiAzMGY2MzIwZjY4ZDk0ZDU5ODdmMDI1ZWQ2ZjY0NmFhM1xuQXV0aG9yaXphdGlvbjogQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVelV4TWlKOS5leUpsYm1SZmRYTmxjbDlwWkNJNk9Td2laWGh3YVhKaGRHbHZiaUk2TVRRMU9EQTFORE16T1gwLkF5dDJhekZhaXYtTlBwLU5RUEY4ekNHTkpnOUFackNfM2d6eFNvXzNfSHpmMS1aTnJ6SzdmaTZ3eGxPdktHOU1DcGxRamlsTDRXUy1ycDdLUExlcWdBXG4iLAorCQkJInVybCI6ICJodHRwczovL2xpdC1yaXZlci05MjI4NS5oZXJva3VhcHAuY29tL2FwaS9ldmVudHMvNyIsCisJCQkicGF0aFZhcmlhYmxlcyI6IHt9LAorCQkJInByZVJlcXVlc3RTY3JpcHQiOiBudWxsLAorCQkJIm1ldGhvZCI6ICJERUxFVEUiLAorCQkJImNvbGxlY3Rpb25JZCI6ICI5NWY3MWI2OS1jNjVmLWZiZmMtNGRhOS0yNTFlYTg0NmNkZTUiLAorCQkJImRhdGEiOiBudWxsLAorCQkJImRhdGFNb2RlIjogInBhcmFtcyIsCisJCQkibmFtZSI6ICJkZWxldGUgZXZlbnQiLAorCQkJImRlc2NyaXB0aW9uIjogIiIsCisJCQkiZGVzY3JpcHRpb25Gb3JtYXQiOiAiaHRtbCIsCisJCQkidGltZSI6IDE0NTgwNDc2NTU2NjYsCisJCQkidmVyc2lvbiI6IDIsCisJCQkicmVzcG9uc2VzIjogW10sCisJCQkidGVzdHMiOiBudWxsLAorCQkJImN1cnJlbnRIZWxwZXIiOiAibm9ybWFsIiwKKwkJCSJoZWxwZXJBdHRyaWJ1dGVzIjoge30KKwkJfSwKKwkJeworCQkJImlkIjogIjY4YTFkMjc2LTg5ZTYtM2I4My0wNGEzLWIyMDU0NjNhYTg0YSIsCisJCQkiaGVhZGVycyI6ICJYLUFwaS1rZXk6IDMwZjYzMjBmNjhkOTRkNTk4N2YwMjVlZDZmNjQ2YWEzXG5BdXRob3JpemF0aW9uOiBCZWFyZXIgZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6VXhNaUo5LmV5SmxibVJmZFhObGNsOXBaQ0k2T1N3aVpYaHdhWEpoZEdsdmJpSTZNVFExT0RBMU5ETXpPWDAuQXl0MmF6RmFpdi1OUHAtTlFQRjh6Q0dOSmc5QVpyQ18zZ3p4U29fM19IemYxLVpOcnpLN2ZpNnd4bE92S0c5TUNwbFFqaWxMNFdTLXJwN0tQTGVxZ0FcbiIsCisJCQkidXJsIjogImh0dHBzOi8vbGl0LXJpdmVyLTkyMjg1Lmhlcm9rdWFwcC5jb20vYXBpL3BsYWNlcy8xIiwKKwkJCSJwYXRoVmFyaWFibGVzIjoge30sCisJCQkicHJlUmVxdWVzdFNjcmlwdCI6IG51bGwsCisJCQkibWV0aG9kIjogIkdFVCIsCisJCQkiY29sbGVjdGlvbklkIjogIjk1ZjcxYjY5LWM2NWYtZmJmYy00ZGE5LTI1MWVhODQ2Y2RlNSIsCisJCQkiZGF0YSI6IG51bGwsCisJCQkiZGF0YU1vZGUiOiAicGFyYW1zIiwKKwkJCSJuYW1lIjogImdldCBzaW5nbGUgcGxhY2UiLAorCQkJImRlc2NyaXB0aW9uIjogIiIsCisJCQkiZGVzY3JpcHRpb25Gb3JtYXQiOiAiaHRtbCIsCisJCQkidGltZSI6IDE0NTgwNDgwMTY4ODMsCisJCQkidmVyc2lvbiI6IDIsCisJCQkicmVzcG9uc2VzIjogW10sCisJCQkidGVzdHMiOiBudWxsLAorCQkJImN1cnJlbnRIZWxwZXIiOiAibm9ybWFsIiwKKwkJCSJoZWxwZXJBdHRyaWJ1dGVzIjoge30KKwkJfSwKKwkJeworCQkJImlkIjogIjljMGExMDAxLTY4OGUtOGUzOS1iNGQ4LTRiZjBmMmUwYmQyOSIsCisJCQkiaGVhZGVycyI6ICJYLUFwaS1rZXk6IDMwZjYzMjBmNjhkOTRkNTk4N2YwMjVlZDZmNjQ2YWEzXG5BdXRob3JpemF0aW9uOiBCZWFyZXIgZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6VXhNaUo5LmV5SmxibVJmZFhObGNsOXBaQ0k2T1N3aVpYaHdhWEpoZEdsdmJpSTZNVFExT0RBMU5ETXpPWDAuQXl0MmF6RmFpdi1OUHAtTlFQRjh6Q0dOSmc5QVpyQ18zZ3p4U29fM19IemYxLVpOcnpLN2ZpNnd4bE92S0c5TUNwbFFqaWxMNFdTLXJwN0tQTGVxZ0FcbkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvblxuIiwKKwkJCSJ1cmwiOiAiaHR0cHM6Ly9saXQtcml2ZXItOTIyODUuaGVyb2t1YXBwLmNvbS9hcGkvZXZlbnRzIiwKKwkJCSJwYXRoVmFyaWFibGVzIjoge30sCisJCQkicHJlUmVxdWVzdFNjcmlwdCI6IG51bGwsCisJCQkibWV0aG9kIjogIlBPU1QiLAorCQkJImNvbGxlY3Rpb25JZCI6ICI5NWY3MWI2OS1jNjVmLWZiZmMtNGRhOS0yNTFlYTg0NmNkZTUiLAorCQkJImRhdGEiOiBbXSwKKwkJCSJkYXRhTW9kZSI6ICJyYXciLAorCQkJIm5hbWUiOiAiY3JlYXRlIGV2ZW50IiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ3NTcyNTAyLAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9LAorCQkJInJhd01vZGVEYXRhIjogIntcImV2ZW50XCI6IHtcbiAgICBcIm5hbWVcIjogXCJzb21lIG5hbWVcIixcbiAgICBcImRlc2NyaXB0aW9uXCI6IFwic29tZSBkZXNjcmlwdGlvbiB0aGF0J3MgY29vbFwiLFxuICAgIFwiZGF0ZVwiOiBcIjIwMTYtMDMtMzFcIlxufVxufSIKKwkJfSwKKwkJeworCQkJImlkIjogImMxMzRiZDFmLTUyNzktMzZjZS04MzM5LTEwNWY2MTU1ZTZhMiIsCisJCQkiaGVhZGVycyI6ICJYLUFwaS1rZXk6IDMwZjYzMjBmNjhkOTRkNTk4N2YwMjVlZDZmNjQ2YWEzXG5BdXRob3JpemF0aW9uOiBCZWFyZXIgZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6VXhNaUo5LmV5SmxibVJmZFhObGNsOXBaQ0k2T1N3aVpYaHdhWEpoZEdsdmJpSTZNVFExT0RBMU5ETXpPWDAuQXl0MmF6RmFpdi1OUHAtTlFQRjh6Q0dOSmc5QVpyQ18zZ3p4U29fM19IemYxLVpOcnpLN2ZpNnd4bE92S0c5TUNwbFFqaWxMNFdTLXJwN0tQTGVxZ0FcbiIsCisJCQkidXJsIjogImh0dHBzOi8vbGl0LXJpdmVyLTkyMjg1Lmhlcm9rdWFwcC5jb20vYXBpL3BsYWNlcz9uZWFyYnk9MyIsCisJCQkicGF0aFZhcmlhYmxlcyI6IHt9LAorCQkJInByZVJlcXVlc3RTY3JpcHQiOiBudWxsLAorCQkJIm1ldGhvZCI6ICJHRVQiLAorCQkJImNvbGxlY3Rpb25JZCI6ICI5NWY3MWI2OS1jNjVmLWZiZmMtNGRhOS0yNTFlYTg0NmNkZTUiLAorCQkJImRhdGEiOiBudWxsLAorCQkJImRhdGFNb2RlIjogInBhcmFtcyIsCisJCQkibmFtZSI6ICJnZXQgcGxhY2UgbmVhcmJ5IGFub3RoZXIgcGxhY2UiLAorCQkJImRlc2NyaXB0aW9uIjogIiIsCisJCQkiZGVzY3JpcHRpb25Gb3JtYXQiOiAiaHRtbCIsCisJCQkidGltZSI6IDE0NTgwNDgxODc0MTUsCisJCQkidmVyc2lvbiI6IDIsCisJCQkicmVzcG9uc2VzIjogW10sCisJCQkidGVzdHMiOiBudWxsLAorCQkJImN1cnJlbnRIZWxwZXIiOiAibm9ybWFsIiwKKwkJCSJoZWxwZXJBdHRyaWJ1dGVzIjoge30KKwkJfSwKKwkJeworCQkJImlkIjogImQzYjk1MDZlLTg2NTEtZmJiYy1hMDg5LWU0ODQxYTc5YjFhNSIsCisJCQkiaGVhZGVycyI6ICJYLUFwaS1rZXk6IDMwZjYzMjBmNjhkOTRkNTk4N2YwMjVlZDZmNjQ2YWEzXG5BdXRob3JpemF0aW9uOiBCZWFyZXIgZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6VXhNaUo5LmV5SmxibVJmZFhObGNsOXBaQ0k2T1N3aVpYaHdhWEpoZEdsdmJpSTZNVFExT0RBMU5ETXpPWDAuQXl0MmF6RmFpdi1OUHAtTlFQRjh6Q0dOSmc5QVpyQ18zZ3p4U29fM19IemYxLVpOcnpLN2ZpNnd4bE92S0c5TUNwbFFqaWxMNFdTLXJwN0tQTGVxZ0FcbkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvblxuIiwKKwkJCSJ1cmwiOiAiaHR0cHM6Ly9saXQtcml2ZXItOTIyODUuaGVyb2t1YXBwLmNvbS9hcGkvZXZlbnRzLzgiLAorCQkJInBhdGhWYXJpYWJsZXMiOiB7fSwKKwkJCSJwcmVSZXF1ZXN0U2NyaXB0IjogbnVsbCwKKwkJCSJtZXRob2QiOiAiUFVUIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJkYXRhIjogW10sCisJCQkiZGF0YU1vZGUiOiAicmF3IiwKKwkJCSJuYW1lIjogInVwZGF0aW5nIGV2ZW50IiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ3ODE4NDQ0LAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9LAorCQkJInJhd01vZGVEYXRhIjogIntcImV2ZW50XCI6IHsgXCJuYW1lXCI6IFwibmV3IG5hbWVcIn19IgorCQl9LAorCQl7CisJCQkiaWQiOiAiZGJiNjEwZjgtN2ZkMC1iOGQ5LTJiZmUtYzUzMWE0NWFiMGVjIiwKKwkJCSJoZWFkZXJzIjogIlgtQXBpLWtleTogMzBmNjMyMGY2OGQ5NGQ1OTg3ZjAyNWVkNmY2NDZhYTNcbkF1dGhvcml6YXRpb246IEJlYXJlciBleUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpJVXpVeE1pSjkuZXlKbGJtUmZkWE5sY2w5cFpDSTZPU3dpWlhod2FYSmhkR2x2YmlJNk1UUTFPREExTkRNek9YMC5BeXQyYXpGYWl2LU5QcC1OUVBGOHpDR05KZzlBWnJDXzNnenhTb18zX0h6ZjEtWk5yeks3Zmk2d3hsT3ZLRzlNQ3BsUWppbEw0V1MtcnA3S1BMZXFnQVxuIiwKKwkJCSJ1cmwiOiAiaHR0cHM6Ly9saXQtcml2ZXItOTIyODUuaGVyb2t1YXBwLmNvbS9hcGkvcGxhY2VzIiwKKwkJCSJwYXRoVmFyaWFibGVzIjoge30sCisJCQkicHJlUmVxdWVzdFNjcmlwdCI6IG51bGwsCisJCQkibWV0aG9kIjogIkdFVCIsCisJCQkiY29sbGVjdGlvbklkIjogIjk1ZjcxYjY5LWM2NWYtZmJmYy00ZGE5LTI1MWVhODQ2Y2RlNSIsCisJCQkiZGF0YSI6IG51bGwsCisJCQkiZGF0YU1vZGUiOiAicGFyYW1zIiwKKwkJCSJuYW1lIjogImxpc3QgcGxhY2VzIiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ3OTgzODU3LAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9CisJCX0sCisJCXsKKwkJCSJpZCI6ICJkY2E5YmZiNC0wODA4LWJkYzQtOWVkNi0yOWM0ZmViOGRhOTIiLAorCQkJImhlYWRlcnMiOiAiWC1BcGkta2V5OiAzMGY2MzIwZjY4ZDk0ZDU5ODdmMDI1ZWQ2ZjY0NmFhM1xuQXV0aG9yaXphdGlvbjogQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVelV4TWlKOS5leUpsYm1SZmRYTmxjbDlwWkNJNk9Td2laWGh3YVhKaGRHbHZiaUk2TVRRMU9EQTFORE16T1gwLkF5dDJhekZhaXYtTlBwLU5RUEY4ekNHTkpnOUFackNfM2d6eFNvXzNfSHpmMS1aTnJ6SzdmaTZ3eGxPdktHOU1DcGxRamlsTDRXUy1ycDdLUExlcWdBXG5Db250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb25cbiIsCisJCQkidXJsIjogImh0dHBzOi8vbGl0LXJpdmVyLTkyMjg1Lmhlcm9rdWFwcC5jb20vYXBpL3BsYWNlcyIsCisJCQkicGF0aFZhcmlhYmxlcyI6IHt9LAorCQkJInByZVJlcXVlc3RTY3JpcHQiOiBudWxsLAorCQkJIm1ldGhvZCI6ICJQT1NUIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJkYXRhIjogW10sCisJCQkiZGF0YU1vZGUiOiAicmF3IiwKKwkJCSJuYW1lIjogImNyZWF0aW5nIHBsYWNlIiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ4MDk5MzExLAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9LAorCQkJInJhd01vZGVEYXRhIjogIntcInBsYWNlXCI6IHtcIm5hbWVcIjogXCJTYXBwb3JvXCJ9fSIKKwkJfSwKKwkJeworCQkJImlkIjogImViNjJkMjJhLTZkMmQtMzEyNy02MTM0LWVkMTU1ZDVhOTllNSIsCisJCQkiaGVhZGVycyI6ICJYLUFwaS1rZXk6IDMwZjYzMjBmNjhkOTRkNTk4N2YwMjVlZDZmNjQ2YWEzXG5Db250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb25cbiIsCisJCQkidXJsIjogImh0dHA6Ly9saXQtcml2ZXItOTIyODUuaGVyb2t1YXBwLmNvbS9hcGkvYXV0aCIsCisJCQkicHJlUmVxdWVzdFNjcmlwdCI6IG51bGwsCisJCQkicGF0aFZhcmlhYmxlcyI6IHt9LAorCQkJIm1ldGhvZCI6ICJQT1NUIiwKKwkJCSJkYXRhIjogW10sCisJCQkiZGF0YU1vZGUiOiAicmF3IiwKKwkJCSJ2ZXJzaW9uIjogMiwKKwkJCSJ0ZXN0cyI6IG51bGwsCisJCQkiY3VycmVudEhlbHBlciI6ICJub3JtYWwiLAorCQkJImhlbHBlckF0dHJpYnV0ZXMiOiB7fSwKKwkJCSJ0aW1lIjogMTQ1ODA0NzI3NDI5OCwKKwkJCSJuYW1lIjogIkdldCB0b2tlbiIsCisJCQkiZGVzY3JpcHRpb24iOiAiIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJyZXNwb25zZXMiOiBbXSwKKwkJCSJyYXdNb2RlRGF0YSI6ICJ7XCJlbWFpbFwiOiBcInJvd2UuZnJlZGVyaXF1ZUBncmVlbi5iaXpcIiwgXCJwYXNzd29yZFwiOlwidGVzdHBhc3NcIn0iCisJCX0sCisJCXsKKwkJCSJpZCI6ICJlYzFjZjMyMC0yY2IwLWIzNGMtNDdjMS0yOTBhZGUwZWZhZWEiLAorCQkJImhlYWRlcnMiOiAiWC1BcGkta2V5OiAzMGY2MzIwZjY4ZDk0ZDU5ODdmMDI1ZWQ2ZjY0NmFhM1xuQXV0aG9yaXphdGlvbjogQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVelV4TWlKOS5leUpsYm1SZmRYTmxjbDlwWkNJNk9Td2laWGh3YVhKaGRHbHZiaUk2TVRRMU9EQTFORE16T1gwLkF5dDJhekZhaXYtTlBwLU5RUEY4ekNHTkpnOUFackNfM2d6eFNvXzNfSHpmMS1aTnJ6SzdmaTZ3eGxPdktHOU1DcGxRamlsTDRXUy1ycDdLUExlcWdBXG4iLAorCQkJInVybCI6ICJodHRwczovL2xpdC1yaXZlci05MjI4NS5oZXJva3VhcHAuY29tL2FwaS90YWdzIiwKKwkJCSJwcmVSZXF1ZXN0U2NyaXB0IjogbnVsbCwKKwkJCSJwYXRoVmFyaWFibGVzIjoge30sCisJCQkibWV0aG9kIjogIkdFVCIsCisJCQkiZGF0YSI6IG51bGwsCisJCQkiZGF0YU1vZGUiOiAicGFyYW1zIiwKKwkJCSJ0ZXN0cyI6IG51bGwsCisJCQkiY3VycmVudEhlbHBlciI6ICJub3JtYWwiLAorCQkJImhlbHBlckF0dHJpYnV0ZXMiOiB7fSwKKwkJCSJ0aW1lIjogMTQ1ODA0ODM2ODMzMSwKKwkJCSJuYW1lIjogImxpc3QgdGFncyIsCisJCQkiZGVzY3JpcHRpb24iOiAiIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJyZXNwb25zZXMiOiBbXQorCQl9LAorCQl7CisJCQkiaWQiOiAiZmRmOGRhZjctNzQ2NS1hMzNhLTY3YmYtYjIyYzEzNzJlOTljIiwKKwkJCSJoZWFkZXJzIjogIlgtQXBpLWtleTogMzBmNjMyMGY2OGQ5NGQ1OTg3ZjAyNWVkNmY2NDZhYTNcbkF1dGhvcml6YXRpb246IEJlYXJlciBleUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpJVXpVeE1pSjkuZXlKbGJtUmZkWE5sY2w5cFpDSTZPU3dpWlhod2FYSmhkR2x2YmlJNk1UUTFPREExTkRNek9YMC5BeXQyYXpGYWl2LU5QcC1OUVBGOHpDR05KZzlBWnJDXzNnenhTb18zX0h6ZjEtWk5yeks3Zmk2d3hsT3ZLRzlNQ3BsUWppbEw0V1MtcnA3S1BMZXFnQVxuIiwKKwkJCSJ1cmwiOiAiaHR0cHM6Ly9saXQtcml2ZXItOTIyODUuaGVyb2t1YXBwLmNvbS9hcGkvZXZlbnRzLzgiLAorCQkJInBhdGhWYXJpYWJsZXMiOiB7fSwKKwkJCSJwcmVSZXF1ZXN0U2NyaXB0IjogbnVsbCwKKwkJCSJtZXRob2QiOiAiR0VUIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJkYXRhIjogbnVsbCwKKwkJCSJkYXRhTW9kZSI6ICJwYXJhbXMiLAorCQkJIm5hbWUiOiAiZ2V0IHNpbmdsZSBldmVudCIsCisJCQkiZGVzY3JpcHRpb24iOiAiIiwKKwkJCSJkZXNjcmlwdGlvbkZvcm1hdCI6ICJodG1sIiwKKwkJCSJ0aW1lIjogMTQ1ODA0NzkzNTgwNywKKwkJCSJ2ZXJzaW9uIjogMiwKKwkJCSJyZXNwb25zZXMiOiBbXSwKKwkJCSJ0ZXN0cyI6IG51bGwsCisJCQkiY3VycmVudEhlbHBlciI6ICJub3JtYWwiLAorCQkJImhlbHBlckF0dHJpYnV0ZXMiOiB7fQorCQl9CisJXQorfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwxMCArMSwxNCBAQAogIyBSZWFkbWUKIAorIyMjIEluZm9ybWF0aW9uCisKK1doZW4geW91IGdldCB0aGUgSlNPTiBmcm9tIHRoZSBBUEkgeW91IG1pZ2h0IHRoaW5rICJ3aGF0IHRoZSAqIGlzIHRoaXM/ISIgYW5kIHRoYXQncyBiZWNhdXNlIEkndmUgdHJpZWQgdG8gZm9ybSBteSByZXNwb25zZXMgYWNjb3JkaW5nIHRvIHRoZSBbSlNPTkFQSV0oaHR0cDovL2pzb25hcGkub3JnLykgc3RhbmRhcmQuIFNvcnJ5IGlmIGl0J3MgaGFyZCB0byByZWFkLiAKKwogIyMjIEluc3RhbGxhdGlvbgogCiAqIENsb25lIGRvd24gdGhpcyByZXBvCiAqIGBidW5kbGUgaW5zdGFsbGAgdG8gaW5zdGFsbCBkZXBlbmRlbmNpZXMKLSogYHJha2UgZGI6c2V0dXBgIHRvIHNldHVwIGRhdGFiYXNlICoqSU1QT1JUQU5UISoqIFRoaXMgYXBwbGljYXRpb24gcmVsaWVzIG9uIGJlaW5nIHJ1biBvbiBhIFBvc3RncmVTUUwgZGF0YWJhc2UuCisqIGByYWtlIGRiOnNldHVwYCB0byBzZXR1cCBkYXRhYmFzZSAqKklNUE9SVEFOVCEqKiBUaGlzIGFwcGxpY2F0aW9uIHJlbGllcyBvbiBiZWluZyBydW4gb24gYSBQb3N0Z3JlU1FMIGRhdGFiYXNlLCBpZiB5b3UgZG9uJ3QgaGF2ZSB0aGF0IGluc3RhbGxlZCwgdHJ5IHRlc3Rpbmcgb24gdGhlIGxpdmUgdmVyc2lvbiB0aGF0IGlzIGRlcGxveWVkIGF0IHRoZSBVUkw6IFtodHRwOi8vbGl0LXJpdmVyLTkyMjg1Lmhlcm9rdWFwcC5jb20vYXBpXShodHRwOi8vbGl0LXJpdmVyLTkyMjg1Lmhlcm9rdWFwcC5jb20vYXBpKS4gQ2hlY2sgb3V0IHRoZSBwb3N0bWFuIGZpbGUgb24gaG93IHRvIGF1dGhvcml6ZSBhbmQgYWxsIHRoYXQuCiAqIGByYWlscyBzZXJ2ZXJgCiAKICMjIyBUZXN0cw=="
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-03-14T14:54:53Z",
        "message": "updated readme",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-03-08T13:10:16Z",
        "message": "funcitonality finished",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-03-08T11:23:37Z",
        "message": "Geocoder things",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-03-08T09:53:46Z",
        "message": "added geocoder to bundle",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-03-08T09:45:56Z",
        "message": "added user serializer to limit data sent out by api to only show user ID",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-03-07T16:15:56Z",
        "message": "things are clearing up",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-03-07T15:21:26Z",
        "message": "things again",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-03-07T13:45:02Z",
        "message": "things",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-03-07T08:56:40Z",
        "message": "still confused by tokens",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-03-05T16:04:34Z",
        "message": "still messing aroung with jwt... this is just silly",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-03-05T12:51:13Z",
        "message": "checking for api key",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-03-04T21:55:11Z",
        "message": "starting test for api key validation",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-03-01T11:05:07Z",
        "message": "Code is now without Rubocop offenses. ApiVersion uses lonely operator, one-lined that bad boy.",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-02-28T22:53:44Z",
        "message": "accept header versioning",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": "QEAgLTAsMCArMSwzMzAgQEAKK3sKKwkiaWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkibmFtZSI6ICJBcGkgdGVzdGVyIiwKKwkiZGVzY3JpcHRpb24iOiAiIiwKKwkib3JkZXIiOiBbCisJCSJlYjYyZDIyYS02ZDJkLTMxMjctNjEzNC1lZDE1NWQ1YTk5ZTUiLAorCQkiNDIzN2ZlZmUtZjc1Yi0yZTBhLWNhYjktMzU1YTIwNzE0ODcyIiwKKwkJIjRiYTUzNzhhLTI4ODQtMDRkMi05MjJmLWVlYmNlNGZmMTg3MiIsCisJCSI5YzBhMTAwMS02ODhlLThlMzktYjRkOC00YmYwZjJlMGJkMjkiLAorCQkiNjFkYmQ5NGQtMWYzNC1kOGU5LWFkMWMtOGU4MjAwNGE1ZmNhIiwKKwkJImQzYjk1MDZlLTg2NTEtZmJiYy1hMDg5LWU0ODQxYTc5YjFhNSIsCisJCSI0YjBhYWY1Ny05OTNlLWY5YWEtYmI5OS1lYTY5MzZiNTk3NzUiLAorCQkiZmRmOGRhZjctNzQ2NS1hMzNhLTY3YmYtYjIyYzEzNzJlOTljIiwKKwkJImRiYjYxMGY4LTdmZDAtYjhkOS0yYmZlLWM1MzFhNDVhYjBlYyIsCisJCSI2OGExZDI3Ni04OWU2LTNiODMtMDRhMy1iMjA1NDYzYWE4NGEiLAorCQkiZGNhOWJmYjQtMDgwOC1iZGM0LTllZDYtMjljNGZlYjhkYTkyIiwKKwkJImMxMzRiZDFmLTUyNzktMzZjZS04MzM5LTEwNWY2MTU1ZTZhMiIsCisJCSJlYzFjZjMyMC0yY2IwLWIzNGMtNDdjMS0yOTBhZGUwZWZhZWEiLAorCQkiMTkxNWI4YTAtOWVkZC1mYWYzLTQ5NTEtMmUzODc3NmQ0MDVmIiwKKwkJIjRiZjNjZTY0LWI2NDYtZmQ0MC02M2E1LWRhMjlhNjNhYTFiYSIKKwldLAorCSJmb2xkZXJzIjogW10sCisJInRpbWVzdGFtcCI6IDE0NTc2MDAxNzc0OTUsCisJIm93bmVyIjogMCwKKwkicmVtb3RlTGluayI6ICIiLAorCSJwdWJsaWMiOiBmYWxzZSwKKwkicmVxdWVzdHMiOiBbCisJCXsKKwkJCSJpZCI6ICIxOTE1YjhhMC05ZWRkLWZhZjMtNDk1MS0yZTM4Nzc2ZDQwNWYiLAorCQkJImhlYWRlcnMiOiAiWC1BcGkta2V5OiAzMGY2MzIwZjY4ZDk0ZDU5ODdmMDI1ZWQ2ZjY0NmFhM1xuQXV0aG9yaXphdGlvbjogQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVelV4TWlKOS5leUpsYm1SZmRYTmxjbDlwWkNJNk9Td2laWGh3YVhKaGRHbHZiaUk2TVRRMU9EQTFORE16T1gwLkF5dDJhekZhaXYtTlBwLU5RUEY4ekNHTkpnOUFackNfM2d6eFNvXzNfSHpmMS1aTnJ6SzdmaTZ3eGxPdktHOU1DcGxRamlsTDRXUy1ycDdLUExlcWdBXG4iLAorCQkJInVybCI6ICJodHRwczovL2xpdC1yaXZlci05MjI4NS5oZXJva3VhcHAuY29tL2FwaS90YWdzLzEiLAorCQkJInBhdGhWYXJpYWJsZXMiOiB7fSwKKwkJCSJwcmVSZXF1ZXN0U2NyaXB0IjogbnVsbCwKKwkJCSJtZXRob2QiOiAiR0VUIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJkYXRhIjogbnVsbCwKKwkJCSJkYXRhTW9kZSI6ICJwYXJhbXMiLAorCQkJIm5hbWUiOiAibGlzdCBzaW5nbGUgdGFnIiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ4NDEzNjc5LAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9CisJCX0sCisJCXsKKwkJCSJpZCI6ICI0MjM3ZmVmZS1mNzViLTJlMGEtY2FiOS0zNTVhMjA3MTQ4NzIiLAorCQkJImhlYWRlcnMiOiAiWC1BcGkta2V5OiAzMGY2MzIwZjY4ZDk0ZDU5ODdmMDI1ZWQ2ZjY0NmFhM1xuQXV0aG9yaXphdGlvbjogQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVelV4TWlKOS5leUpsYm1SZmRYTmxjbDlwWkNJNk9Td2laWGh3YVhKaGRHbHZiaUk2TVRRMU9EQTFORE16T1gwLkF5dDJhekZhaXYtTlBwLU5RUEY4ekNHTkpnOUFackNfM2d6eFNvXzNfSHpmMS1aTnJ6SzdmaTZ3eGxPdktHOU1DcGxRamlsTDRXUy1ycDdLUExlcWdBXG4iLAorCQkJInVybCI6ICJodHRwczovL2xpdC1yaXZlci05MjI4NS5oZXJva3VhcHAuY29tL2FwaS9ldmVudHMiLAorCQkJInBhdGhWYXJpYWJsZXMiOiB7fSwKKwkJCSJwcmVSZXF1ZXN0U2NyaXB0IjogbnVsbCwKKwkJCSJtZXRob2QiOiAiR0VUIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJkYXRhIjogbnVsbCwKKwkJCSJkYXRhTW9kZSI6ICJwYXJhbXMiLAorCQkJIm5hbWUiOiAiZ2V0IGFsbCBldmVudHMgYXMgYXV0aG9yaXplZCB1c2VyIiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ3MzE0NjI3LAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9CisJCX0sCisJCXsKKwkJCSJpZCI6ICI0YjBhYWY1Ny05OTNlLWY5YWEtYmI5OS1lYTY5MzZiNTk3NzUiLAorCQkJImhlYWRlcnMiOiAiWC1BcGkta2V5OiAzMGY2MzIwZjY4ZDk0ZDU5ODdmMDI1ZWQ2ZjY0NmFhM1xuQXV0aG9yaXphdGlvbjogQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVelV4TWlKOS5leUpsYm1SZmRYTmxjbDlwWkNJNk9Td2laWGh3YVhKaGRHbHZiaUk2TVRRMU9EQTFORE16T1gwLkF5dDJhekZhaXYtTlBwLU5RUEY4ekNHTkpnOUFackNfM2d6eFNvXzNfSHpmMS1aTnJ6SzdmaTZ3eGxPdktHOU1DcGxRamlsTDRXUy1ycDdLUExlcWdBXG4iLAorCQkJInVybCI6ICJodHRwczovL2xpdC1yaXZlci05MjI4NS5oZXJva3VhcHAuY29tL2FwaS9ldmVudHM/c2VhcmNoPXBhciIsCisJCQkicGF0aFZhcmlhYmxlcyI6IHt9LAorCQkJInByZVJlcXVlc3RTY3JpcHQiOiBudWxsLAorCQkJIm1ldGhvZCI6ICJHRVQiLAorCQkJImNvbGxlY3Rpb25JZCI6ICI5NWY3MWI2OS1jNjVmLWZiZmMtNGRhOS0yNTFlYTg0NmNkZTUiLAorCQkJImRhdGEiOiBudWxsLAorCQkJImRhdGFNb2RlIjogInBhcmFtcyIsCisJCQkibmFtZSI6ICJzZWFyY2ggZXZlbnRzIiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ3ODk0OTcwLAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9CisJCX0sCisJCXsKKwkJCSJpZCI6ICI0YmE1Mzc4YS0yODg0LTA0ZDItOTIyZi1lZWJjZTRmZjE4NzIiLAorCQkJImhlYWRlcnMiOiAiWC1BcGkta2V5OiAzMGY2MzIwZjY4ZDk0ZDU5ODdmMDI1ZWQ2ZjY0NmFhM1xuIiwKKwkJCSJ1cmwiOiAiaHR0cHM6Ly9saXQtcml2ZXItOTIyODUuaGVyb2t1YXBwLmNvbS9hcGkvZXZlbnRzIiwKKwkJCSJwYXRoVmFyaWFibGVzIjoge30sCisJCQkicHJlUmVxdWVzdFNjcmlwdCI6IG51bGwsCisJCQkibWV0aG9kIjogIkdFVCIsCisJCQkiY29sbGVjdGlvbklkIjogIjk1ZjcxYjY5LWM2NWYtZmJmYy00ZGE5LTI1MWVhODQ2Y2RlNSIsCisJCQkiZGF0YSI6IG51bGwsCisJCQkiZGF0YU1vZGUiOiAicGFyYW1zIiwKKwkJCSJuYW1lIjogImdldCBhbGwgZXZlbnRzIGEgdW5hdXRob3JpemVkIHVzZXIiLAorCQkJImRlc2NyaXB0aW9uIjogIiIsCisJCQkiZGVzY3JpcHRpb25Gb3JtYXQiOiAiaHRtbCIsCisJCQkidGltZSI6IDE0NTgwNDczNzI4MTQsCisJCQkidmVyc2lvbiI6IDIsCisJCQkicmVzcG9uc2VzIjogW10sCisJCQkidGVzdHMiOiBudWxsLAorCQkJImN1cnJlbnRIZWxwZXIiOiAibm9ybWFsIiwKKwkJCSJoZWxwZXJBdHRyaWJ1dGVzIjoge30KKwkJfSwKKwkJeworCQkJImlkIjogIjRiZjNjZTY0LWI2NDYtZmQ0MC02M2E1LWRhMjlhNjNhYTFiYSIsCisJCQkiaGVhZGVycyI6ICJYLUFwaS1rZXk6IDMwZjYzMjBmNjhkOTRkNTk4N2YwMjVlZDZmNjQ2YWEzXG5BdXRob3JpemF0aW9uOiBCZWFyZXIgZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6VXhNaUo5LmV5SmxibVJmZFhObGNsOXBaQ0k2T1N3aVpYaHdhWEpoZEdsdmJpSTZNVFExT0RBMU5ETXpPWDAuQXl0MmF6RmFpdi1OUHAtTlFQRjh6Q0dOSmc5QVpyQ18zZ3p4U29fM19IemYxLVpOcnpLN2ZpNnd4bE92S0c5TUNwbFFqaWxMNFdTLXJwN0tQTGVxZ0FcbiIsCisJCQkidXJsIjogImh0dHBzOi8vbGl0LXJpdmVyLTkyMjg1Lmhlcm9rdWFwcC5jb20vYXBpL3RhZ3MvMS9ldmVudHMiLAorCQkJInBhdGhWYXJpYWJsZXMiOiB7fSwKKwkJCSJwcmVSZXF1ZXN0U2NyaXB0IjogbnVsbCwKKwkJCSJtZXRob2QiOiAiR0VUIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJkYXRhIjogbnVsbCwKKwkJCSJkYXRhTW9kZSI6ICJwYXJhbXMiLAorCQkJIm5hbWUiOiAibGlzdCBhIHRhZ3MgZXZlbnRzIiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ4NDYyOTMzLAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9CisJCX0sCisJCXsKKwkJCSJpZCI6ICI2MWRiZDk0ZC0xZjM0LWQ4ZTktYWQxYy04ZTgyMDA0YTVmY2EiLAorCQkJImhlYWRlcnMiOiAiWC1BcGkta2V5OiAzMGY2MzIwZjY4ZDk0ZDU5ODdmMDI1ZWQ2ZjY0NmFhM1xuQXV0aG9yaXphdGlvbjogQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVelV4TWlKOS5leUpsYm1SZmRYTmxjbDlwWkNJNk9Td2laWGh3YVhKaGRHbHZiaUk2TVRRMU9EQTFORE16T1gwLkF5dDJhekZhaXYtTlBwLU5RUEY4ekNHTkpnOUFackNfM2d6eFNvXzNfSHpmMS1aTnJ6SzdmaTZ3eGxPdktHOU1DcGxRamlsTDRXUy1ycDdLUExlcWdBXG4iLAorCQkJInVybCI6ICJodHRwczovL2xpdC1yaXZlci05MjI4NS5oZXJva3VhcHAuY29tL2FwaS9ldmVudHMvNyIsCisJCQkicGF0aFZhcmlhYmxlcyI6IHt9LAorCQkJInByZVJlcXVlc3RTY3JpcHQiOiBudWxsLAorCQkJIm1ldGhvZCI6ICJERUxFVEUiLAorCQkJImNvbGxlY3Rpb25JZCI6ICI5NWY3MWI2OS1jNjVmLWZiZmMtNGRhOS0yNTFlYTg0NmNkZTUiLAorCQkJImRhdGEiOiBudWxsLAorCQkJImRhdGFNb2RlIjogInBhcmFtcyIsCisJCQkibmFtZSI6ICJkZWxldGUgZXZlbnQiLAorCQkJImRlc2NyaXB0aW9uIjogIiIsCisJCQkiZGVzY3JpcHRpb25Gb3JtYXQiOiAiaHRtbCIsCisJCQkidGltZSI6IDE0NTgwNDc2NTU2NjYsCisJCQkidmVyc2lvbiI6IDIsCisJCQkicmVzcG9uc2VzIjogW10sCisJCQkidGVzdHMiOiBudWxsLAorCQkJImN1cnJlbnRIZWxwZXIiOiAibm9ybWFsIiwKKwkJCSJoZWxwZXJBdHRyaWJ1dGVzIjoge30KKwkJfSwKKwkJeworCQkJImlkIjogIjY4YTFkMjc2LTg5ZTYtM2I4My0wNGEzLWIyMDU0NjNhYTg0YSIsCisJCQkiaGVhZGVycyI6ICJYLUFwaS1rZXk6IDMwZjYzMjBmNjhkOTRkNTk4N2YwMjVlZDZmNjQ2YWEzXG5BdXRob3JpemF0aW9uOiBCZWFyZXIgZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6VXhNaUo5LmV5SmxibVJmZFhObGNsOXBaQ0k2T1N3aVpYaHdhWEpoZEdsdmJpSTZNVFExT0RBMU5ETXpPWDAuQXl0MmF6RmFpdi1OUHAtTlFQRjh6Q0dOSmc5QVpyQ18zZ3p4U29fM19IemYxLVpOcnpLN2ZpNnd4bE92S0c5TUNwbFFqaWxMNFdTLXJwN0tQTGVxZ0FcbiIsCisJCQkidXJsIjogImh0dHBzOi8vbGl0LXJpdmVyLTkyMjg1Lmhlcm9rdWFwcC5jb20vYXBpL3BsYWNlcy8xIiwKKwkJCSJwYXRoVmFyaWFibGVzIjoge30sCisJCQkicHJlUmVxdWVzdFNjcmlwdCI6IG51bGwsCisJCQkibWV0aG9kIjogIkdFVCIsCisJCQkiY29sbGVjdGlvbklkIjogIjk1ZjcxYjY5LWM2NWYtZmJmYy00ZGE5LTI1MWVhODQ2Y2RlNSIsCisJCQkiZGF0YSI6IG51bGwsCisJCQkiZGF0YU1vZGUiOiAicGFyYW1zIiwKKwkJCSJuYW1lIjogImdldCBzaW5nbGUgcGxhY2UiLAorCQkJImRlc2NyaXB0aW9uIjogIiIsCisJCQkiZGVzY3JpcHRpb25Gb3JtYXQiOiAiaHRtbCIsCisJCQkidGltZSI6IDE0NTgwNDgwMTY4ODMsCisJCQkidmVyc2lvbiI6IDIsCisJCQkicmVzcG9uc2VzIjogW10sCisJCQkidGVzdHMiOiBudWxsLAorCQkJImN1cnJlbnRIZWxwZXIiOiAibm9ybWFsIiwKKwkJCSJoZWxwZXJBdHRyaWJ1dGVzIjoge30KKwkJfSwKKwkJeworCQkJImlkIjogIjljMGExMDAxLTY4OGUtOGUzOS1iNGQ4LTRiZjBmMmUwYmQyOSIsCisJCQkiaGVhZGVycyI6ICJYLUFwaS1rZXk6IDMwZjYzMjBmNjhkOTRkNTk4N2YwMjVlZDZmNjQ2YWEzXG5BdXRob3JpemF0aW9uOiBCZWFyZXIgZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6VXhNaUo5LmV5SmxibVJmZFhObGNsOXBaQ0k2T1N3aVpYaHdhWEpoZEdsdmJpSTZNVFExT0RBMU5ETXpPWDAuQXl0MmF6RmFpdi1OUHAtTlFQRjh6Q0dOSmc5QVpyQ18zZ3p4U29fM19IemYxLVpOcnpLN2ZpNnd4bE92S0c5TUNwbFFqaWxMNFdTLXJwN0tQTGVxZ0FcbkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvblxuIiwKKwkJCSJ1cmwiOiAiaHR0cHM6Ly9saXQtcml2ZXItOTIyODUuaGVyb2t1YXBwLmNvbS9hcGkvZXZlbnRzIiwKKwkJCSJwYXRoVmFyaWFibGVzIjoge30sCisJCQkicHJlUmVxdWVzdFNjcmlwdCI6IG51bGwsCisJCQkibWV0aG9kIjogIlBPU1QiLAorCQkJImNvbGxlY3Rpb25JZCI6ICI5NWY3MWI2OS1jNjVmLWZiZmMtNGRhOS0yNTFlYTg0NmNkZTUiLAorCQkJImRhdGEiOiBbXSwKKwkJCSJkYXRhTW9kZSI6ICJyYXciLAorCQkJIm5hbWUiOiAiY3JlYXRlIGV2ZW50IiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ3NTcyNTAyLAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9LAorCQkJInJhd01vZGVEYXRhIjogIntcImV2ZW50XCI6IHtcbiAgICBcIm5hbWVcIjogXCJzb21lIG5hbWVcIixcbiAgICBcImRlc2NyaXB0aW9uXCI6IFwic29tZSBkZXNjcmlwdGlvbiB0aGF0J3MgY29vbFwiLFxuICAgIFwiZGF0ZVwiOiBcIjIwMTYtMDMtMzFcIlxufVxufSIKKwkJfSwKKwkJeworCQkJImlkIjogImMxMzRiZDFmLTUyNzktMzZjZS04MzM5LTEwNWY2MTU1ZTZhMiIsCisJCQkiaGVhZGVycyI6ICJYLUFwaS1rZXk6IDMwZjYzMjBmNjhkOTRkNTk4N2YwMjVlZDZmNjQ2YWEzXG5BdXRob3JpemF0aW9uOiBCZWFyZXIgZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6VXhNaUo5LmV5SmxibVJmZFhObGNsOXBaQ0k2T1N3aVpYaHdhWEpoZEdsdmJpSTZNVFExT0RBMU5ETXpPWDAuQXl0MmF6RmFpdi1OUHAtTlFQRjh6Q0dOSmc5QVpyQ18zZ3p4U29fM19IemYxLVpOcnpLN2ZpNnd4bE92S0c5TUNwbFFqaWxMNFdTLXJwN0tQTGVxZ0FcbiIsCisJCQkidXJsIjogImh0dHBzOi8vbGl0LXJpdmVyLTkyMjg1Lmhlcm9rdWFwcC5jb20vYXBpL3BsYWNlcz9uZWFyYnk9MyIsCisJCQkicGF0aFZhcmlhYmxlcyI6IHt9LAorCQkJInByZVJlcXVlc3RTY3JpcHQiOiBudWxsLAorCQkJIm1ldGhvZCI6ICJHRVQiLAorCQkJImNvbGxlY3Rpb25JZCI6ICI5NWY3MWI2OS1jNjVmLWZiZmMtNGRhOS0yNTFlYTg0NmNkZTUiLAorCQkJImRhdGEiOiBudWxsLAorCQkJImRhdGFNb2RlIjogInBhcmFtcyIsCisJCQkibmFtZSI6ICJnZXQgcGxhY2UgbmVhcmJ5IGFub3RoZXIgcGxhY2UiLAorCQkJImRlc2NyaXB0aW9uIjogIiIsCisJCQkiZGVzY3JpcHRpb25Gb3JtYXQiOiAiaHRtbCIsCisJCQkidGltZSI6IDE0NTgwNDgxODc0MTUsCisJCQkidmVyc2lvbiI6IDIsCisJCQkicmVzcG9uc2VzIjogW10sCisJCQkidGVzdHMiOiBudWxsLAorCQkJImN1cnJlbnRIZWxwZXIiOiAibm9ybWFsIiwKKwkJCSJoZWxwZXJBdHRyaWJ1dGVzIjoge30KKwkJfSwKKwkJeworCQkJImlkIjogImQzYjk1MDZlLTg2NTEtZmJiYy1hMDg5LWU0ODQxYTc5YjFhNSIsCisJCQkiaGVhZGVycyI6ICJYLUFwaS1rZXk6IDMwZjYzMjBmNjhkOTRkNTk4N2YwMjVlZDZmNjQ2YWEzXG5BdXRob3JpemF0aW9uOiBCZWFyZXIgZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6VXhNaUo5LmV5SmxibVJmZFhObGNsOXBaQ0k2T1N3aVpYaHdhWEpoZEdsdmJpSTZNVFExT0RBMU5ETXpPWDAuQXl0MmF6RmFpdi1OUHAtTlFQRjh6Q0dOSmc5QVpyQ18zZ3p4U29fM19IemYxLVpOcnpLN2ZpNnd4bE92S0c5TUNwbFFqaWxMNFdTLXJwN0tQTGVxZ0FcbkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvblxuIiwKKwkJCSJ1cmwiOiAiaHR0cHM6Ly9saXQtcml2ZXItOTIyODUuaGVyb2t1YXBwLmNvbS9hcGkvZXZlbnRzLzgiLAorCQkJInBhdGhWYXJpYWJsZXMiOiB7fSwKKwkJCSJwcmVSZXF1ZXN0U2NyaXB0IjogbnVsbCwKKwkJCSJtZXRob2QiOiAiUFVUIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJkYXRhIjogW10sCisJCQkiZGF0YU1vZGUiOiAicmF3IiwKKwkJCSJuYW1lIjogInVwZGF0aW5nIGV2ZW50IiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ3ODE4NDQ0LAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9LAorCQkJInJhd01vZGVEYXRhIjogIntcImV2ZW50XCI6IHsgXCJuYW1lXCI6IFwibmV3IG5hbWVcIn19IgorCQl9LAorCQl7CisJCQkiaWQiOiAiZGJiNjEwZjgtN2ZkMC1iOGQ5LTJiZmUtYzUzMWE0NWFiMGVjIiwKKwkJCSJoZWFkZXJzIjogIlgtQXBpLWtleTogMzBmNjMyMGY2OGQ5NGQ1OTg3ZjAyNWVkNmY2NDZhYTNcbkF1dGhvcml6YXRpb246IEJlYXJlciBleUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpJVXpVeE1pSjkuZXlKbGJtUmZkWE5sY2w5cFpDSTZPU3dpWlhod2FYSmhkR2x2YmlJNk1UUTFPREExTkRNek9YMC5BeXQyYXpGYWl2LU5QcC1OUVBGOHpDR05KZzlBWnJDXzNnenhTb18zX0h6ZjEtWk5yeks3Zmk2d3hsT3ZLRzlNQ3BsUWppbEw0V1MtcnA3S1BMZXFnQVxuIiwKKwkJCSJ1cmwiOiAiaHR0cHM6Ly9saXQtcml2ZXItOTIyODUuaGVyb2t1YXBwLmNvbS9hcGkvcGxhY2VzIiwKKwkJCSJwYXRoVmFyaWFibGVzIjoge30sCisJCQkicHJlUmVxdWVzdFNjcmlwdCI6IG51bGwsCisJCQkibWV0aG9kIjogIkdFVCIsCisJCQkiY29sbGVjdGlvbklkIjogIjk1ZjcxYjY5LWM2NWYtZmJmYy00ZGE5LTI1MWVhODQ2Y2RlNSIsCisJCQkiZGF0YSI6IG51bGwsCisJCQkiZGF0YU1vZGUiOiAicGFyYW1zIiwKKwkJCSJuYW1lIjogImxpc3QgcGxhY2VzIiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ3OTgzODU3LAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9CisJCX0sCisJCXsKKwkJCSJpZCI6ICJkY2E5YmZiNC0wODA4LWJkYzQtOWVkNi0yOWM0ZmViOGRhOTIiLAorCQkJImhlYWRlcnMiOiAiWC1BcGkta2V5OiAzMGY2MzIwZjY4ZDk0ZDU5ODdmMDI1ZWQ2ZjY0NmFhM1xuQXV0aG9yaXphdGlvbjogQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVelV4TWlKOS5leUpsYm1SZmRYTmxjbDlwWkNJNk9Td2laWGh3YVhKaGRHbHZiaUk2TVRRMU9EQTFORE16T1gwLkF5dDJhekZhaXYtTlBwLU5RUEY4ekNHTkpnOUFackNfM2d6eFNvXzNfSHpmMS1aTnJ6SzdmaTZ3eGxPdktHOU1DcGxRamlsTDRXUy1ycDdLUExlcWdBXG5Db250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb25cbiIsCisJCQkidXJsIjogImh0dHBzOi8vbGl0LXJpdmVyLTkyMjg1Lmhlcm9rdWFwcC5jb20vYXBpL3BsYWNlcyIsCisJCQkicGF0aFZhcmlhYmxlcyI6IHt9LAorCQkJInByZVJlcXVlc3RTY3JpcHQiOiBudWxsLAorCQkJIm1ldGhvZCI6ICJQT1NUIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJkYXRhIjogW10sCisJCQkiZGF0YU1vZGUiOiAicmF3IiwKKwkJCSJuYW1lIjogImNyZWF0aW5nIHBsYWNlIiwKKwkJCSJkZXNjcmlwdGlvbiI6ICIiLAorCQkJImRlc2NyaXB0aW9uRm9ybWF0IjogImh0bWwiLAorCQkJInRpbWUiOiAxNDU4MDQ4MDk5MzExLAorCQkJInZlcnNpb24iOiAyLAorCQkJInJlc3BvbnNlcyI6IFtdLAorCQkJInRlc3RzIjogbnVsbCwKKwkJCSJjdXJyZW50SGVscGVyIjogIm5vcm1hbCIsCisJCQkiaGVscGVyQXR0cmlidXRlcyI6IHt9LAorCQkJInJhd01vZGVEYXRhIjogIntcInBsYWNlXCI6IHtcIm5hbWVcIjogXCJTYXBwb3JvXCJ9fSIKKwkJfSwKKwkJeworCQkJImlkIjogImViNjJkMjJhLTZkMmQtMzEyNy02MTM0LWVkMTU1ZDVhOTllNSIsCisJCQkiaGVhZGVycyI6ICJYLUFwaS1rZXk6IDMwZjYzMjBmNjhkOTRkNTk4N2YwMjVlZDZmNjQ2YWEzXG5Db250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb25cbiIsCisJCQkidXJsIjogImh0dHA6Ly9saXQtcml2ZXItOTIyODUuaGVyb2t1YXBwLmNvbS9hcGkvYXV0aCIsCisJCQkicHJlUmVxdWVzdFNjcmlwdCI6IG51bGwsCisJCQkicGF0aFZhcmlhYmxlcyI6IHt9LAorCQkJIm1ldGhvZCI6ICJQT1NUIiwKKwkJCSJkYXRhIjogW10sCisJCQkiZGF0YU1vZGUiOiAicmF3IiwKKwkJCSJ2ZXJzaW9uIjogMiwKKwkJCSJ0ZXN0cyI6IG51bGwsCisJCQkiY3VycmVudEhlbHBlciI6ICJub3JtYWwiLAorCQkJImhlbHBlckF0dHJpYnV0ZXMiOiB7fSwKKwkJCSJ0aW1lIjogMTQ1ODA0NzI3NDI5OCwKKwkJCSJuYW1lIjogIkdldCB0b2tlbiIsCisJCQkiZGVzY3JpcHRpb24iOiAiIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJyZXNwb25zZXMiOiBbXSwKKwkJCSJyYXdNb2RlRGF0YSI6ICJ7XCJlbWFpbFwiOiBcInJvd2UuZnJlZGVyaXF1ZUBncmVlbi5iaXpcIiwgXCJwYXNzd29yZFwiOlwidGVzdHBhc3NcIn0iCisJCX0sCisJCXsKKwkJCSJpZCI6ICJlYzFjZjMyMC0yY2IwLWIzNGMtNDdjMS0yOTBhZGUwZWZhZWEiLAorCQkJImhlYWRlcnMiOiAiWC1BcGkta2V5OiAzMGY2MzIwZjY4ZDk0ZDU5ODdmMDI1ZWQ2ZjY0NmFhM1xuQXV0aG9yaXphdGlvbjogQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVelV4TWlKOS5leUpsYm1SZmRYTmxjbDlwWkNJNk9Td2laWGh3YVhKaGRHbHZiaUk2TVRRMU9EQTFORE16T1gwLkF5dDJhekZhaXYtTlBwLU5RUEY4ekNHTkpnOUFackNfM2d6eFNvXzNfSHpmMS1aTnJ6SzdmaTZ3eGxPdktHOU1DcGxRamlsTDRXUy1ycDdLUExlcWdBXG4iLAorCQkJInVybCI6ICJodHRwczovL2xpdC1yaXZlci05MjI4NS5oZXJva3VhcHAuY29tL2FwaS90YWdzIiwKKwkJCSJwcmVSZXF1ZXN0U2NyaXB0IjogbnVsbCwKKwkJCSJwYXRoVmFyaWFibGVzIjoge30sCisJCQkibWV0aG9kIjogIkdFVCIsCisJCQkiZGF0YSI6IG51bGwsCisJCQkiZGF0YU1vZGUiOiAicGFyYW1zIiwKKwkJCSJ0ZXN0cyI6IG51bGwsCisJCQkiY3VycmVudEhlbHBlciI6ICJub3JtYWwiLAorCQkJImhlbHBlckF0dHJpYnV0ZXMiOiB7fSwKKwkJCSJ0aW1lIjogMTQ1ODA0ODM2ODMzMSwKKwkJCSJuYW1lIjogImxpc3QgdGFncyIsCisJCQkiZGVzY3JpcHRpb24iOiAiIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJyZXNwb25zZXMiOiBbXQorCQl9LAorCQl7CisJCQkiaWQiOiAiZmRmOGRhZjctNzQ2NS1hMzNhLTY3YmYtYjIyYzEzNzJlOTljIiwKKwkJCSJoZWFkZXJzIjogIlgtQXBpLWtleTogMzBmNjMyMGY2OGQ5NGQ1OTg3ZjAyNWVkNmY2NDZhYTNcbkF1dGhvcml6YXRpb246IEJlYXJlciBleUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpJVXpVeE1pSjkuZXlKbGJtUmZkWE5sY2w5cFpDSTZPU3dpWlhod2FYSmhkR2x2YmlJNk1UUTFPREExTkRNek9YMC5BeXQyYXpGYWl2LU5QcC1OUVBGOHpDR05KZzlBWnJDXzNnenhTb18zX0h6ZjEtWk5yeks3Zmk2d3hsT3ZLRzlNQ3BsUWppbEw0V1MtcnA3S1BMZXFnQVxuIiwKKwkJCSJ1cmwiOiAiaHR0cHM6Ly9saXQtcml2ZXItOTIyODUuaGVyb2t1YXBwLmNvbS9hcGkvZXZlbnRzLzgiLAorCQkJInBhdGhWYXJpYWJsZXMiOiB7fSwKKwkJCSJwcmVSZXF1ZXN0U2NyaXB0IjogbnVsbCwKKwkJCSJtZXRob2QiOiAiR0VUIiwKKwkJCSJjb2xsZWN0aW9uSWQiOiAiOTVmNzFiNjktYzY1Zi1mYmZjLTRkYTktMjUxZWE4NDZjZGU1IiwKKwkJCSJkYXRhIjogbnVsbCwKKwkJCSJkYXRhTW9kZSI6ICJwYXJhbXMiLAorCQkJIm5hbWUiOiAiZ2V0IHNpbmdsZSBldmVudCIsCisJCQkiZGVzY3JpcHRpb24iOiAiIiwKKwkJCSJkZXNjcmlwdGlvbkZvcm1hdCI6ICJodG1sIiwKKwkJCSJ0aW1lIjogMTQ1ODA0NzkzNTgwNywKKwkJCSJ2ZXJzaW9uIjogMiwKKwkJCSJyZXNwb25zZXMiOiBbXSwKKwkJCSJ0ZXN0cyI6IG51bGwsCisJCQkiY3VycmVudEhlbHBlciI6ICJub3JtYWwiLAorCQkJImhlbHBlckF0dHJpYnV0ZXMiOiB7fQorCQl9CisJXQorfQpcIE5vIG5ld2xpbmUgYXQgZW5kIG9mIGZpbGVAQCAtMSwxMCArMSwxNCBAQAogIyBSZWFkbWUKIAorIyMjIEluZm9ybWF0aW9uCisKK1doZW4geW91IGdldCB0aGUgSlNPTiBmcm9tIHRoZSBBUEkgeW91IG1pZ2h0IHRoaW5rICJ3aGF0IHRoZSAqIGlzIHRoaXM/ISIgYW5kIHRoYXQncyBiZWNhdXNlIEkndmUgdHJpZWQgdG8gZm9ybSBteSByZXNwb25zZXMgYWNjb3JkaW5nIHRvIHRoZSBbSlNPTkFQSV0oaHR0cDovL2pzb25hcGkub3JnLykgc3RhbmRhcmQuIFNvcnJ5IGlmIGl0J3MgaGFyZCB0byByZWFkLiAKKwogIyMjIEluc3RhbGxhdGlvbgogCiAqIENsb25lIGRvd24gdGhpcyByZXBvCiAqIGBidW5kbGUgaW5zdGFsbGAgdG8gaW5zdGFsbCBkZXBlbmRlbmNpZXMKLSogYHJha2UgZGI6c2V0dXBgIHRvIHNldHVwIGRhdGFiYXNlICoqSU1QT1JUQU5UISoqIFRoaXMgYXBwbGljYXRpb24gcmVsaWVzIG9uIGJlaW5nIHJ1biBvbiBhIFBvc3RncmVTUUwgZGF0YWJhc2UuCisqIGByYWtlIGRiOnNldHVwYCB0byBzZXR1cCBkYXRhYmFzZSAqKklNUE9SVEFOVCEqKiBUaGlzIGFwcGxpY2F0aW9uIHJlbGllcyBvbiBiZWluZyBydW4gb24gYSBQb3N0Z3JlU1FMIGRhdGFiYXNlLCBpZiB5b3UgZG9uJ3QgaGF2ZSB0aGF0IGluc3RhbGxlZCwgdHJ5IHRlc3Rpbmcgb24gdGhlIGxpdmUgdmVyc2lvbiB0aGF0IGlzIGRlcGxveWVkIGF0IHRoZSBVUkw6IFtodHRwOi8vbGl0LXJpdmVyLTkyMjg1Lmhlcm9rdWFwcC5jb20vYXBpXShodHRwOi8vbGl0LXJpdmVyLTkyMjg1Lmhlcm9rdWFwcC5jb20vYXBpKS4gQ2hlY2sgb3V0IHRoZSBwb3N0bWFuIGZpbGUgb24gaG93IHRvIGF1dGhvcml6ZSBhbmQgYWxsIHRoYXQuCiAqIGByYWlscyBzZXJ2ZXJgCiAKICMjIyBUZXN0cw=="
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-02-28T15:28:06Z",
        "message": "routing tests",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-02-28T13:06:43Z",
        "message": "added nested tag events",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-02-27T14:28:40Z",
        "message": "serialization things",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-02-26T01:09:00Z",
        "message": "giving up",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1DV450_mw222rs",
        "owner": "mw222rs",
        "timestamp": "2016-02-25T22:35:24Z",
        "message": "getting closer",
        "committer": "mw222rs",
        "filename": "README.md",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-15T21:08:05Z",
        "message": "Added files via upload",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-15T21:07:09Z",
        "message": "Added files via upload",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-13T13:21:35Z",
        "message": "Add event page",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-13T12:50:02Z",
        "message": "Add search event",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-13T12:33:31Z",
        "message": "Add event directive",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-13T09:24:11Z",
        "message": "Introduce search",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-13T08:35:29Z",
        "message": "Disable tags when editing event",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-13T08:19:19Z",
        "message": "Actually split tags on space",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-13T08:16:28Z",
        "message": "Add create/alter event success message",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-13T08:05:20Z",
        "message": "Refactor failed request handler",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-13T08:01:44Z",
        "message": "Editable event",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-13T07:50:22Z",
        "message": "Add flash on sucessful event removal",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-13T07:42:26Z",
        "message": "Add tags to event popup",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-13T07:42:26Z",
        "message": "Remove footer text",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-13T07:42:26Z",
        "message": "Add lodash",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-12T10:24:57Z",
        "message": "Add flash messages",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-12T10:10:39Z",
        "message": "Logout user if event requests fail",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-11T16:34:58Z",
        "message": "Make tags filerable",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-11T10:43:58Z",
        "message": "Add tags to mainpage",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "1dv450-Registering-rk222ev-client",
        "owner": "rk222ev",
        "timestamp": "2016-03-11T10:15:00Z",
        "message": "Move server url to constant",
        "committer": "rk222ev",
        "filename": "",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-03-16T12:53:25Z",
        "message": "think I'm finally done",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-03-14T22:19:30Z",
        "message": "improved my teams",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-03-04T03:29:48Z",
        "message": "done with crud",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-03-03T23:04:31Z",
        "message": "progress with controller",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-26T03:27:33Z",
        "message": "making progress on GamesController",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-26T02:53:39Z",
        "message": "find locations by id",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-26T01:54:08Z",
        "message": "checking for api key with requests",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-25T22:38:16Z",
        "message": "getting started on crud functionality",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-25T02:07:22Z",
        "message": "getting my models to work together, as a team",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-25T01:07:10Z",
        "message": "trying to work around ruby's weirdness",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-24T00:53:51Z",
        "message": "oauth nightmare",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-10T20:47:22Z",
        "message": "fixed routing to only include paths I'm using",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-10T20:18:20Z",
        "message": "fixed access to allusers path",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-10T20:11:24Z",
        "message": "fixed option to delete user accounts for both admin and user, and admin can have own api key",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-10T19:50:37Z",
        "message": "fixed error messages for new api keys",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-10T19:48:05Z",
        "message": "fixed routing for api_keys",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-10T19:35:54Z",
        "message": "fixed redirect when creating new user",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-10T19:29:04Z",
        "message": "fixed error messages for register form",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-10T19:05:11Z",
        "message": "fixed email format and seed",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "Webbramverk",
        "owner": "jc222fi",
        "timestamp": "2016-02-10T13:00:22Z",
        "message": "fixed hiding password in register form",
        "committer": "jc222fi",
        "filename": "Registreringsapplikation/test/models/home_team_test.rb",
        "code": ""
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-03-16T20:02:37Z",
        "message": "Update README.md",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-03-16T12:30:20Z",
        "message": "Create README.md",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-03-12T09:48:22Z",
        "message": "Changing description",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-03-11T09:52:56Z",
        "message": "Merge branch 'master' of https://github.com/Angamanga/1dv450-ki222bj",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-03-11T09:51:20Z",
        "message": "testingtesting",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-03-01T09:37:13Z",
        "message": "Update README.md",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-02-25T09:25:43Z",
        "message": "Update README.md",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-02-25T09:25:25Z",
        "message": "Update README.md",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-02-25T09:17:10Z",
        "message": "Update README.md",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-02-25T09:16:42Z",
        "message": "Update README.md",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-02-25T09:15:50Z",
        "message": "updating readme",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-02-25T09:08:09Z",
        "message": "fixing admin",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-02-25T09:04:23Z",
        "message": "fixing safari-related bug",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-02-24T22:23:50Z",
        "message": "fixing with heroku",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-02-24T22:10:19Z",
        "message": "changing start script",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-02-24T21:52:10Z",
        "message": "removing unneccesary depencency between application and user controllers",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-02-24T15:46:26Z",
        "message": "adding readme",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-02-24T15:04:50Z",
        "message": "fixing security policies for editing and removing applications",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-02-23T22:50:29Z",
        "message": "deleting applications when deleting user",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "1dv450-ki222bj",
        "owner": "Angamanga",
        "timestamp": "2016-02-23T15:21:01Z",
        "message": "implementing application delete function",
        "committer": "Angamanga",
        "filename": "README.md",
        "code": "QEAgLTEsMiArMSwzIEBACiAjIDFkdjQ1MC1raTIyMmJqCiBSZWFkbWUKK0FuZHJhciBsaXRl"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-14T20:54:26Z",
        "message": "Merge pull request #86 from mw222rs/constant-url\n\nAdded server url to constants.",
        "committer": "rk222ev",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-14T20:38:12Z",
        "message": "Added server url to constants.",
        "committer": "mw222rs",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-14T20:14:19Z",
        "message": "Merge pull request #85 from rk222ev/earth-settings\n\nEarth settings",
        "committer": "mw222rs",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-14T18:53:40Z",
        "message": "Move earth settings to earth-page",
        "committer": "rk222ev",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-14T18:42:18Z",
        "message": "Use es6 destructuring",
        "committer": "rk222ev",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-14T16:22:14Z",
        "message": "Merge pull request #83 from rk222ev/build-production\n\nBuild production",
        "committer": "mw222rs",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-14T15:33:43Z",
        "message": "Introduce clean npm script",
        "committer": "rk222ev",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-14T15:33:20Z",
        "message": "Introduce postbuild:production npm script",
        "committer": "rk222ev",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-13T21:13:50Z",
        "message": "Merge pull request #81 from mw222rs/wss\n\nWebsocket should be over secure connection",
        "committer": "rk222ev",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-13T21:08:18Z",
        "message": "Websocket should be over secure connection",
        "committer": "mw222rs",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-13T21:03:05Z",
        "message": "Merge pull request #80 from mw222rs/production-build\n\nProduction build added to package.json",
        "committer": "rk222ev",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-13T20:53:26Z",
        "message": "Merge branch 'production-build' of github.com:mw222rs/Visualisering-frontend into production-build",
        "committer": "mw222rs",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-13T20:51:56Z",
        "message": "node env sed with define plugin",
        "committer": "mw222rs",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-13T20:51:56Z",
        "message": "changing to minified JS and separate minified css",
        "committer": "mw222rs",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-13T20:51:27Z",
        "message": "change back to non-minified for heroku",
        "committer": "mw222rs",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-13T20:47:53Z",
        "message": "Merge branch 'production-build' of github.com:mw222rs/Visualisering-frontend into production-build",
        "committer": "mw222rs",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-13T20:47:39Z",
        "message": "change back to non-minified for heroku",
        "committer": "mw222rs",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-13T20:47:38Z",
        "message": "Revert \"TEST! changing to minified JS and separate minified css\"",
        "committer": "mw222rs",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-13T20:47:38Z",
        "message": "node env sed with define plugin",
        "committer": "mw222rs",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    },
    {
        "repo": "Visualisering-frontend",
        "owner": "Visualisering",
        "timestamp": "2016-03-13T20:47:38Z",
        "message": "changing to minified JS and separate minified css",
        "committer": "mw222rs",
        "filename": "src/constants.js",
        "code": "QEAgLTEsNiArMSw2IEBACiBpbXBvcnQgQyBmcm9tICIuLi9jb25zdGFudHMiOwogLy8gZXhwb3J0IGNvbnN0IHdlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjUwMDAiKTsKLWV4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3c3M6Ly9pdml6LWJhY2suaGVyb2t1YXBwLmNvbS8iKTsKK2V4cG9ydCBjb25zdCB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KEMuV1NfVVJMKTsKIAogZXhwb3J0IGRlZmF1bHQgewogICBnZXREYXRhRnJvbUJhY2tlbmQoKSB7QEAgLTEsNSArMSw2IEBACiBjb25zdCBDID0gewogICAvLyBSZWdhcmRpbmcgV1MKKyAgV1NfVVJMOiAid3NzOi8vaXZpei1iYWNrLmhlcm9rdWFwcC5jb20vIiwgLy8gPC0gQ2hhbmdlIHVybCBoZXJlIGlmIHlvdSB3YW50IHRvIQogICBXU19DT05ORUNURUQ6ICJXU19DT05ORUNURUQiLAogICBXU19SRVFVRVNUX0RBVEE6ICJXU19SRVFVRVNUX0RBVEEiLAogICBCQUNLRU5EX0RBVEE6ICJCQUNLRU5EX0RBVEEi"
    }
]